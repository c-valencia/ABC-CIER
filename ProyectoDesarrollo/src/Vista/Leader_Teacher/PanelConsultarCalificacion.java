/** 
 * Nombre del Archivo: Item.java
 * Autores: JULIAN GARCIA RICO (1225435) 
 *          DIEGO FERNANDO BEDOYA (1327749) 
 *          CRISTIAN ALEXANDER VALENCIA TORRES (1329454) 
 *          OSCAR STEVEN ROMERO BERON (1326750) 
 */
package Vista.Leader_Teacher;

import Controlador.ControladorLeaderTeacher;
import Logica.Matricula;
import Logica.Tarea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author oscar
 */
public class PanelConsultarCalificacion extends javax.swing.JPanel {

    ArrayList <Tarea> listaTareas = new ArrayList <> ();
    Matricula matricula = new Matricula ();
    
    /**
     * Creates new form PanelLogin
     */
    public PanelConsultarCalificacion() {
        initComponents();

        
        
        // Eventos 
        EventosPanelConsultarCalificacion events = new EventosPanelConsultarCalificacion();
        asignarEventos(events);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSuperior = new javax.swing.JPanel();
        labelConsulCalificacion = new javax.swing.JLabel();
        labelCedulaLt = new javax.swing.JLabel();
        inputCedulaLt = new javax.swing.JTextField();
        botonListarCursos = new javax.swing.JButton();
        scollPaneListaCursos = new javax.swing.JScrollPane();
        listaCursos = new javax.swing.JList();
        botonCancelar = new javax.swing.JButton();
        botonVerNotas = new javax.swing.JButton();

        setBackground(new java.awt.Color(245, 245, 245));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(750, 505));

        panelSuperior.setBackground(new java.awt.Color(245, 245, 245));
        panelSuperior.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelConsulCalificacion.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelConsulCalificacion.setForeground(new java.awt.Color(15, 15, 111));
        labelConsulCalificacion.setText("CONSULTAR CALIFICACIONES");

        labelCedulaLt.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelCedulaLt.setText("Cedula Leader Teacher:");

        botonListarCursos.setText("Listar Cursos");
        botonListarCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarCursosActionPerformed(evt);
            }
        });

        scollPaneListaCursos.setViewportView(listaCursos);

        botonCancelar.setText("Cancelar");

        botonVerNotas.setText("Ver Calificaciones");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addComponent(botonCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(botonVerNotas))
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCedulaLt)
                            .addComponent(botonListarCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputCedulaLt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scollPaneListaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelConsulCalificacion))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(labelConsulCalificacion)
                .addGap(18, 18, 18)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelCedulaLt)
                    .addComponent(inputCedulaLt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonListarCursos)
                    .addComponent(scollPaneListaCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCancelar)
                    .addComponent(botonVerNotas))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonListarCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarCursosActionPerformed
        // TODO add your handling code her
    }//GEN-LAST:event_botonListarCursosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonListarCursos;
    private javax.swing.JButton botonVerNotas;
    private javax.swing.JTextField inputCedulaLt;
    private javax.swing.JLabel labelCedulaLt;
    private javax.swing.JLabel labelConsulCalificacion;
    private javax.swing.JList listaCursos;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JScrollPane scollPaneListaCursos;
    // End of variables declaration//GEN-END:variables

    // CONTROLADOR
    ControladorLeaderTeacher contLederTeacher;
    
    
    private void asignarEventos(EventosPanelConsultarCalificacion events){
        botonListarCursos.addActionListener(events);
        botonCancelar.addActionListener(events);
        botonVerNotas.addActionListener(events);        
    } // Fin del metodo asignarEventos
        
    private void actualizarListaCursos() {
        contLederTeacher = ControladorLeaderTeacher.getInstance();
        String inputCedulaLT = inputCedulaLt.getText();
        String result = contLederTeacher.listarCursos(inputCedulaLT);      
        if (result != "OK") {
                mostrarMensaje(JOptionPane.INFORMATION_MESSAGE, "Infomacion",
                        "Por favor ingrese la cedula");        
        } else {
            listaCursos.setListData(contLederTeacher.getListaCursosLT());           
        }
        
    } // Fin del metodo actualizarListaCursos
    
    public void verReporteNotas() {
        contLederTeacher = ControladorLeaderTeacher.getInstance();
        String cedulaLt = inputCedulaLt.getText();
        int index = listaCursos.getSelectedIndex();
        if (index == -1) {
            mostrarMensaje(JOptionPane.ERROR_MESSAGE, "Error",
                    "Verifique que tenga cursos matriculados");
        } else {
            String result = contLederTeacher.reporteCalificaciones(cedulaLt, index);
            if (result.equals("OK")) {
                JasperPrint informe = contLederTeacher.getInforme();
                mostrarReporte(informe, "Reporte");
                inputCedulaLt.setText("");
                listaCursos.setListData(new String[0]);
            } else {
                mostrarMensaje(JOptionPane.ERROR_MESSAGE, "Error", result);
            }
        }
    } // Fin del metodo verReporteNotas
    
    private void limpiarCamposPanelSuperio() {
        inputCedulaLt.setText("");
        listaCursos.setListData(new String[0]);
    }
    
    private void mostrarMensaje(int tipo, String titulo, String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, titulo, tipo);
    } // Fin del metodo mostrarMensaje 
    
    private void mostrarReporte(JasperPrint informe, String titulo) {
        if (informe != null) {
            JasperViewer ventanaVisor = new JasperViewer(informe, false);
            ventanaVisor.setTitle(titulo);
            ventanaVisor.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo realizar el informe");
        }

    } // Fin del metodo  mostrarReporte       
    
    private class EventosPanelConsultarCalificacion implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == botonListarCursos) {
                actualizarListaCursos();
            }
            if (e.getSource() == botonCancelar) {
                limpiarCamposPanelSuperio();
            
            }
            if (e.getSource() == botonVerNotas){
                verReporteNotas();
            }
        }
    
    } // Fin de la clase EventosPanelLogin
    
} // Fin de la clase PanelLogin
