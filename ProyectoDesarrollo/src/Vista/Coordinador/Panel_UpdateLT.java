/**
 * Nombre del Archivo: Item.java Autores: JULIAN GARCIA RICO (1225435) DIEGO
 * FERNANDO BEDOYA (1327749) CRISTIAN ALEXANDER VALENCIA TORRES (1329454) OSCAR
 * STEVEN ROMERO BERON (1326750)
 */
package Vista.Coordinador;

import Controlador.ControladorCoordinador;
import Logica.AreaFormacion;
import Logica.GradoEscolarida;
import Logica.LeaderTeacher;
import Logica.LtEnfasis;
import Logica.LtEtnoeducacion;
import Logica.LtNivelEscolaridad;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author oscar
 */
public class Panel_UpdateLT extends javax.swing.JPanel {

    /**
     * Creates new form PanelLogin
     */
    public Panel_UpdateLT() {
        initComponents();
        initPaneles();

        // Eventos 
        EventosPanel_UpdateLT events = new EventosPanel_UpdateLT();
        asignarEventos(events);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonGroupSexo = new javax.swing.ButtonGroup();
        panelInfoPersonal = new javax.swing.JPanel();
        labelCedula = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelApellido = new javax.swing.JLabel();
        labelCorreo = new javax.swing.JLabel();
        labelDireccion = new javax.swing.JLabel();
        labelCelular = new javax.swing.JLabel();
        labelInfoPersonal = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        inputApellido = new javax.swing.JTextField();
        inputCorreo = new javax.swing.JTextField();
        inputCelular = new javax.swing.JTextField();
        inputDireccion = new javax.swing.JTextField();
        radioButtonMasculino = new javax.swing.JRadioButton();
        radioButtonFemenino = new javax.swing.JRadioButton();
        labelSexo = new javax.swing.JLabel();
        labelFecNacimiento = new javax.swing.JLabel();
        botonActualizarInfoPersonal = new javax.swing.JButton();
        inputFecNacimiento = new com.toedter.calendar.JDateChooser();
        inputCedula = new javax.swing.JLabel();
        panelInfoProfesional = new javax.swing.JPanel();
        botonActualizarInfoProfesional = new javax.swing.JButton();
        labelInfoProfesional = new javax.swing.JLabel();
        labelZona = new javax.swing.JLabel();
        checkZonaUrbana = new javax.swing.JCheckBox();
        checkZonaUrbanaMarginal = new javax.swing.JCheckBox();
        checkZonaRural = new javax.swing.JCheckBox();
        checkZonaRuralDifAcc = new javax.swing.JCheckBox();
        labelModalidad = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        checkModalidadAcademica = new javax.swing.JCheckBox();
        checkModalidadTecnica = new javax.swing.JCheckBox();
        labelEnfasis = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        checkEnfasisAgropecuaria = new javax.swing.JCheckBox();
        checkEnfasisComercial = new javax.swing.JCheckBox();
        checkEnfasisPromSocial = new javax.swing.JCheckBox();
        checkEnfasisFinanzas = new javax.swing.JCheckBox();
        checkEnfasisAdministracion = new javax.swing.JCheckBox();
        checkEnfasisEcologia = new javax.swing.JCheckBox();
        checkEnfasisMedAmbiente = new javax.swing.JCheckBox();
        checkEnfasisIndustrial = new javax.swing.JCheckBox();
        checkEnfasisInformatica = new javax.swing.JCheckBox();
        checkEnfasisMineria = new javax.swing.JCheckBox();
        checkEnfasisSalud = new javax.swing.JCheckBox();
        checkEnfasisRecreacion = new javax.swing.JCheckBox();
        checkEnfasisTurismo = new javax.swing.JCheckBox();
        checkEnfasisDeporte = new javax.swing.JCheckBox();
        checkEnfasisOtro = new javax.swing.JCheckBox();
        inputEnfasisOtro = new javax.swing.JTextField();
        labelEtnia = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        checkEtniaAfro = new javax.swing.JCheckBox();
        checkEtniaIndigena = new javax.swing.JCheckBox();
        checkEtniaRom = new javax.swing.JCheckBox();
        checkEtniaNinguna = new javax.swing.JCheckBox();
        labelNivelEsc = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        checkNivEscTransicion = new javax.swing.JCheckBox();
        checkNivEscInicial = new javax.swing.JCheckBox();
        checkNivEscPrimaria = new javax.swing.JCheckBox();
        checkNivEscSecundaria = new javax.swing.JCheckBox();
        checkNivEscMedia = new javax.swing.JCheckBox();
        checkNivEscSuperior = new javax.swing.JCheckBox();
        checkNivEscOtro = new javax.swing.JCheckBox();
        inputNivEscOtro = new javax.swing.JTextField();
        labelGradoEsc = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        checkGradoEscTransicion = new javax.swing.JCheckBox();
        checkGradoEscInicial = new javax.swing.JCheckBox();
        checkGradoEsc1 = new javax.swing.JCheckBox();
        checkGradoEsc2 = new javax.swing.JCheckBox();
        checkGradoEsc3 = new javax.swing.JCheckBox();
        checkGradoEsc4 = new javax.swing.JCheckBox();
        checkGradoEsc5 = new javax.swing.JCheckBox();
        checkGradoEsc6 = new javax.swing.JCheckBox();
        checkGradoEsc7 = new javax.swing.JCheckBox();
        checkGradoEsc8 = new javax.swing.JCheckBox();
        checkGradoEsc9 = new javax.swing.JCheckBox();
        checkGradoEsc10 = new javax.swing.JCheckBox();
        checkGradoEsc11 = new javax.swing.JCheckBox();
        checkGradoEscOtro = new javax.swing.JCheckBox();
        inputGradoEscOtro = new javax.swing.JTextField();
        labelAreaFormacion = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        checkAreaFormCiencias = new javax.swing.JCheckBox();
        checkAreaFormSociales = new javax.swing.JCheckBox();
        checkAreaFormArtistica = new javax.swing.JCheckBox();
        checkAreaFormEtica = new javax.swing.JCheckBox();
        checkAreaFormFisica = new javax.swing.JCheckBox();
        checkAreaFormReligiosa = new javax.swing.JCheckBox();
        checkAreaFormHumanidades = new javax.swing.JCheckBox();
        checkAreaFormMatematicas = new javax.swing.JCheckBox();
        checkAreaFormInformatica = new javax.swing.JCheckBox();
        labelNivEducacion = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        checkNivEduTecnico = new javax.swing.JCheckBox();
        checkNivEduTecnologico = new javax.swing.JCheckBox();
        checkNivEduProfesional = new javax.swing.JCheckBox();
        checkNivEduSuperior = new javax.swing.JCheckBox();
        checkNivEduEspecializacion = new javax.swing.JCheckBox();
        checkNivEduLicenciatura = new javax.swing.JCheckBox();
        checkNivEduMaestria = new javax.swing.JCheckBox();
        checkNivEduDoctorado = new javax.swing.JCheckBox();
        botonGroupZona = new javax.swing.ButtonGroup();
        botonGroupModalidad = new javax.swing.ButtonGroup();
        botonGroupNivEducacionAlcanzado = new javax.swing.ButtonGroup();
        panelExperiencia = new javax.swing.JPanel();
        labelExperiencia = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        labelExpNivPreescolar = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        inputExpNivPreescolar = new javax.swing.JTextField();
        labelExpNivPrimaria = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        inputExpNivPrimaria = new javax.swing.JTextField();
        labelExpNivSecundaria = new javax.swing.JLabel();
        inputExpNivSecundaria = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        labelExpNivMedia = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        inputExpNivMedia = new javax.swing.JTextField();
        labelExpNivSuperior = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        inputExpNivSuperior = new javax.swing.JTextField();
        labelExpDocRural = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        inputExpDocRural = new javax.swing.JTextField();
        labelExpDocUrbano = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        inputExpDocUrbano = new javax.swing.JTextField();
        labelExpDocSecPublico = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        inputExpDocSecPublico = new javax.swing.JTextField();
        lableExpDocSecPrivado = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        inputExpDocPrivado = new javax.swing.JTextField();
        labelExpDocTotal = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        inputExpDocTotal = new javax.swing.JTextField();
        botonActualizarExperiencia = new javax.swing.JButton();
        panelBuscar = new javax.swing.JPanel();
        inputTypeInformation = new javax.swing.JComboBox();
        labelBuscarLT = new javax.swing.JLabel();
        labelBuscarPor = new javax.swing.JLabel();
        labelDatoBusqueda = new javax.swing.JLabel();
        labelTipoInformacion = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        inputBuscarPor = new javax.swing.JComboBox();
        inputDatoBusqueda = new javax.swing.JTextField();
        botonCancelar = new javax.swing.JButton();
        scrollPanelPrincipal = new javax.swing.JScrollPane();
        panelPrincipal = new javax.swing.JPanel();

        panelInfoPersonal.setBackground(new java.awt.Color(245, 245, 245));
        panelInfoPersonal.setBorder(null);

        labelCedula.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelCedula.setText("Cedula:");

        labelNombre.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelNombre.setText("Nombre: ");

        labelApellido.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelApellido.setText("Apellido: ");

        labelCorreo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelCorreo.setText("Email");

        labelDireccion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelDireccion.setText("Direccion: ");

        labelCelular.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelCelular.setText("Celular: ");

        labelInfoPersonal.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelInfoPersonal.setForeground(new java.awt.Color(15, 15, 111));
        labelInfoPersonal.setText("INFORMACIÓN PERSONAL");

        inputNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNombreActionPerformed(evt);
            }
        });

        botonGroupSexo.add(radioButtonMasculino);
        radioButtonMasculino.setText("Masculino");
        radioButtonMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonMasculinoActionPerformed(evt);
            }
        });

        botonGroupSexo.add(radioButtonFemenino);
        radioButtonFemenino.setText("Femenino");

        labelSexo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelSexo.setText("Sexo: ");

        labelFecNacimiento.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelFecNacimiento.setText("Fecha. Nacimiento");

        botonActualizarInfoPersonal.setText("Actualizar");
        botonActualizarInfoPersonal.setEnabled(false);

        inputFecNacimiento.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N

        javax.swing.GroupLayout panelInfoPersonalLayout = new javax.swing.GroupLayout(panelInfoPersonal);
        panelInfoPersonal.setLayout(panelInfoPersonalLayout);
        panelInfoPersonalLayout.setHorizontalGroup(
            panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoPersonalLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonActualizarInfoPersonal))
                    .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                        .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelApellido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCorreo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCelular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoPersonalLayout.createSequentialGroup()
                                .addGap(0, 183, Short.MAX_VALUE)
                                .addComponent(labelFecNacimiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputFecNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                                .addComponent(radioButtonMasculino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioButtonFemenino)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(inputCelular)
                            .addComponent(inputCorreo)
                            .addComponent(inputApellido)
                            .addComponent(inputNombre)
                            .addComponent(inputDireccion)))
                    .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                        .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                                .addComponent(labelCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(inputCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(57, 57, 57))
            .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelInfoPersonal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInfoPersonalLayout.setVerticalGroup(
            panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoPersonalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInfoPersonal)
                .addGap(18, 18, 18)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelCedula)
                        .addComponent(labelFecNacimiento)
                        .addComponent(inputCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputFecNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre)
                    .addComponent(inputNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellido)
                    .addComponent(inputApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCorreo)
                    .addComponent(inputCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCelular)
                    .addComponent(inputCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDireccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioButtonMasculino)
                        .addComponent(radioButtonFemenino))
                    .addComponent(labelSexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonActualizarInfoPersonal)
                .addContainerGap())
        );

        panelInfoProfesional.setBackground(new java.awt.Color(245, 245, 245));
        panelInfoProfesional.setBorder(null);

        botonActualizarInfoProfesional.setText("Actualizar");
        botonActualizarInfoProfesional.setEnabled(false);

        labelInfoProfesional.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelInfoProfesional.setForeground(new java.awt.Color(15, 15, 111));
        labelInfoProfesional.setText("INFORMACIÓN PROFESIONAL");

        labelZona.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelZona.setText("<html><p>De acuerdo con la zona en la que se encuentra la institución educativa en la que desempeña<br>"
            + "su labor docente, la considera como:</html>"
        );

        botonGroupZona.add(checkZonaUrbana);
        checkZonaUrbana.setText("Zona urbana");
        checkZonaUrbana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkZonaUrbanaActionPerformed(evt);
            }
        });

        botonGroupZona.add(checkZonaUrbanaMarginal);
        checkZonaUrbanaMarginal.setText("Zona urbana marginal");

        botonGroupZona.add(checkZonaRural);
        checkZonaRural.setText("Zona rural");

        botonGroupZona.add(checkZonaRuralDifAcc);
        checkZonaRuralDifAcc.setText("Zona rural de difícil acceso");

        labelModalidad.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelModalidad.setText("<html>De acuerdo a la modalidad presentada en la institución educativa en la que desempeña<br>"
            + "su labor docente, la educación media es de carácter</html>");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(152, 152, 152));
        jLabel1.setText("Marque uno");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(152, 152, 152));
        jLabel2.setText("Marque uno");

        botonGroupModalidad.add(checkModalidadAcademica);
        checkModalidadAcademica.setText("Académica");
        checkModalidadAcademica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkModalidadAcademicaActionPerformed(evt);
            }
        });

        botonGroupModalidad.add(checkModalidadTecnica);
        checkModalidadTecnica.setText("Técnica");

        labelEnfasis.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelEnfasis.setText("<html>Si la modalidad presentada en la institución educativa en la que desempeña su labor<br>"
            + "docente es de carácter técnica, elija de las siguientes especialidades la que corresponda</html>");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(152, 152, 152));
        jLabel4.setText("Elija uno o varios énfasis, si su enfasis no se encuentra en el listado, añadalo en la casilla \"otro\".");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(152, 152, 152));
        jLabel5.setText("Selecciona todos los que correspondan.");

        checkEnfasisAgropecuaria.setText("Agropecuaria");

        checkEnfasisComercial.setText("Comercial");

        checkEnfasisPromSocial.setText("Promoción social");

        checkEnfasisFinanzas.setText("Finanzas");

        checkEnfasisAdministracion.setText("Administración");

        checkEnfasisEcologia.setText("Ecología");

        checkEnfasisMedAmbiente.setText("Medio ambiente");

        checkEnfasisIndustrial.setText("Industrial");

        checkEnfasisInformatica.setText("Informática");

        checkEnfasisMineria.setText("Minería");

        checkEnfasisSalud.setText("Salud");

        checkEnfasisRecreacion.setText("Recreación");

        checkEnfasisTurismo.setText("Turismo");

        checkEnfasisDeporte.setText("Deporte");

        checkEnfasisOtro.setText("Otro:");

        inputEnfasisOtro.setEnabled(false);
        inputEnfasisOtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputEnfasisOtroActionPerformed(evt);
            }
        });

        labelEtnia.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelEtnia.setText("<html>Entendiendo la etnoeducación como una política para posicionar la educación intercultural<br>"
            + "en todas las instituciones educativas del país, para que todos los niños, niñas y familias<br>"
            + "entiendan que las culturas afrocolombiana, indígena y gitana son parte de las raíces de <br>"
            + "nuestra nacionalidad. La institución en la que usted se desempeña esta clasificada<br>"
            + "etnoeducativamente orientada hacia la:</html>");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(152, 152, 152));
        jLabel8.setText("<html>Elija ninguna de las anteriores si no reconoce a su institución como etnoeducativa.<br>"
            + "Selecciona todos los que corresponda<br></html>");

        checkEtniaAfro.setText("Etnia afrocolombiana");

        checkEtniaIndigena.setText("Etnia indígena");

        checkEtniaRom.setText("Etnia Rom");
        checkEtniaRom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEtniaRomActionPerformed(evt);
            }
        });

        checkEtniaNinguna.setText("Ninguna de las anteriores");

        labelNivelEsc.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelNivelEsc.setText("<html>Niveles escolares en los que ha desempeñado su labor académica</html>");

        jLabel9.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(152, 152, 152));
        jLabel9.setText("<html>Elija 1 o más niveles escolares en los que haya desempeñado su labor académica. Selecciona<br>"
            + "todos los que correspondan</html>");

        checkNivEscTransicion.setText("Transición (Preescolar 5 años)");
        checkNivEscTransicion.setToolTipText("");

        checkNivEscInicial.setText("Educación Inicial (Primera infancia 3 y 4 años)");

        checkNivEscPrimaria.setText("Educación basica primaria (1°, 2° , 3°, 5°)");

        checkNivEscSecundaria.setText("Educación básica secundario (6°, 7°, 8°, 9°)");

        checkNivEscMedia.setText("Educación media (10°, 11°)");

        checkNivEscSuperior.setText("Nivel superior (Univesidad / Educación Superior)");

        checkNivEscOtro.setText("Otro");

        inputNivEscOtro.setEnabled(false);

        labelGradoEsc.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelGradoEsc.setText("<html>Grados Escolares en los que se ha desempeñado</html>");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(152, 152, 152));
        jLabel12.setText("<html>Elija 1 o más grados escolares en los que haya desempeñado su labor academica. Selecciona todos los<br>"
            + "que correspondan.</html>");

        checkGradoEscTransicion.setText("Transición (5 a 6 años)");

        checkGradoEscInicial.setText("Educación inicial (Primera infancia 3 y 5 años)");

        checkGradoEsc1.setText("1°");

        checkGradoEsc2.setText("2°");

        checkGradoEsc3.setText("3°");

        checkGradoEsc4.setText("4°");

        checkGradoEsc5.setText("5°");

        checkGradoEsc6.setText("6°");

        checkGradoEsc7.setText("7°");

        checkGradoEsc8.setText("8°");

        checkGradoEsc9.setText("9°");

        checkGradoEsc10.setText("10°");

        checkGradoEsc11.setText("11°");

        checkGradoEscOtro.setText("Otro");

        inputGradoEscOtro.setEnabled(false);

        labelAreaFormacion.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelAreaFormacion.setText("<html>Áreas de formación en las que se ha desempeñado</html>");

        jLabel13.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(152, 152, 152));
        jLabel13.setText("<html>Elija 1 o más Áreas de formación en las que se ha desempeñado. Selecciona todos los que correspondan.</html>");

        checkAreaFormCiencias.setText("Ciencias Naturales y Educación Ambiental");

        checkAreaFormSociales.setText("Ciencias Sociales: historia, geografía y constitución política");

        checkAreaFormArtistica.setText("Educación Atística");

        checkAreaFormEtica.setText("Educación ética y valores humanos");

        checkAreaFormFisica.setText("Educación física recreación y deportes");

        checkAreaFormReligiosa.setText("Educación Religiosa");

        checkAreaFormHumanidades.setText("Humanidades, lengua castellana e idioma extranjero (inglés)");

        checkAreaFormMatematicas.setText("Matemáticas");

        checkAreaFormInformatica.setText("Tecnología e Informática");

        labelNivEducacion.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelNivEducacion.setText("<html>Nivel maximo de educación alcanzado</html>");

        jLabel15.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(152, 152, 152));
        jLabel15.setText("<html>Estudios que ha realizado en el nivel de educación superior<br>"
            + "Marca solo uno.</html>");

        botonGroupNivEducacionAlcanzado.add(checkNivEduTecnico);
        checkNivEduTecnico.setText("Nivel Técnico Profesional (relativo a programas Técnicos Profesionales)");

        botonGroupNivEducacionAlcanzado.add(checkNivEduTecnologico);
        checkNivEduTecnologico.setText("Nivel Tecnológico (relativo a programas tecnológicos)");

        botonGroupNivEducacionAlcanzado.add(checkNivEduProfesional);
        checkNivEduProfesional.setText("Nivel Profesional (relativo a programas profesionales universitarios)");

        botonGroupNivEducacionAlcanzado.add(checkNivEduSuperior);
        checkNivEduSuperior.setText("Normalista superior");

        botonGroupNivEducacionAlcanzado.add(checkNivEduEspecializacion);
        checkNivEduEspecializacion.setText("<html>Especializaciones (relativas a programas de Especialización Técnica Profesional,<br>"
            + "Especialización Tecnológica y Especializaciones Profesionales)</html>");

        botonGroupNivEducacionAlcanzado.add(checkNivEduLicenciatura);
        checkNivEduLicenciatura.setText("Licenciatura");

        botonGroupNivEducacionAlcanzado.add(checkNivEduMaestria);
        checkNivEduMaestria.setText("Maestrías");

        botonGroupNivEducacionAlcanzado.add(checkNivEduDoctorado);
        checkNivEduDoctorado.setText("Doctorados");

        javax.swing.GroupLayout panelInfoProfesionalLayout = new javax.swing.GroupLayout(panelInfoProfesional);
        panelInfoProfesional.setLayout(panelInfoProfesionalLayout);
        panelInfoProfesionalLayout.setHorizontalGroup(
            panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoProfesionalLayout.createSequentialGroup()
                .addContainerGap(365, Short.MAX_VALUE)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkEnfasisInformatica)
                    .addComponent(botonActualizarInfoProfesional)
                    .addComponent(checkEnfasisMineria)
                    .addComponent(checkEnfasisSalud)
                    .addComponent(checkEnfasisRecreacion)
                    .addComponent(checkEnfasisTurismo)
                    .addComponent(checkEnfasisDeporte)
                    .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                        .addComponent(checkEnfasisOtro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkGradoEsc6)
                            .addComponent(inputEnfasisOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkGradoEsc7)
                            .addComponent(checkGradoEsc8)
                            .addComponent(checkGradoEsc9)
                            .addComponent(checkGradoEsc10)
                            .addComponent(checkGradoEsc11))))
                .addGap(82, 82, 82))
            .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(labelInfoProfesional))
                    .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkZonaUrbana)
                            .addComponent(labelZona)
                            .addComponent(checkZonaUrbanaMarginal)
                            .addComponent(checkZonaRural)
                            .addComponent(checkZonaRuralDifAcc)
                            .addComponent(labelModalidad)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(checkModalidadAcademica)
                            .addComponent(checkModalidadTecnica)
                            .addComponent(labelEnfasis)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(checkEnfasisAgropecuaria)
                            .addComponent(checkEnfasisComercial)
                            .addComponent(checkEnfasisPromSocial)
                            .addComponent(checkEnfasisFinanzas)
                            .addComponent(checkEnfasisAdministracion)
                            .addComponent(checkEnfasisEcologia)
                            .addComponent(checkEnfasisMedAmbiente)
                            .addComponent(checkEnfasisIndustrial)
                            .addComponent(labelEtnia)
                            .addComponent(jLabel8)
                            .addComponent(checkEtniaAfro)
                            .addComponent(checkEtniaIndigena)
                            .addComponent(checkEtniaRom)
                            .addComponent(checkEtniaNinguna)
                            .addComponent(labelNivelEsc)
                            .addComponent(jLabel9)
                            .addComponent(checkNivEscTransicion)
                            .addComponent(checkNivEscInicial)
                            .addComponent(checkNivEscPrimaria)
                            .addComponent(checkNivEscSecundaria)
                            .addComponent(checkNivEscMedia)
                            .addComponent(checkNivEscSuperior)
                            .addComponent(labelGradoEsc)
                            .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                                .addComponent(checkNivEscOtro)
                                .addGap(18, 18, 18)
                                .addComponent(inputNivEscOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)
                            .addComponent(checkGradoEscTransicion)
                            .addComponent(checkGradoEscInicial)
                            .addComponent(checkGradoEsc1)
                            .addComponent(checkGradoEsc2)
                            .addComponent(checkGradoEsc3)
                            .addComponent(checkGradoEsc4)
                            .addComponent(checkGradoEsc5)
                            .addComponent(labelAreaFormacion)
                            .addGroup(panelInfoProfesionalLayout.createSequentialGroup()
                                .addComponent(checkGradoEscOtro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputGradoEscOtro, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13)
                            .addComponent(checkAreaFormCiencias)
                            .addComponent(checkAreaFormSociales)
                            .addComponent(checkAreaFormArtistica)
                            .addComponent(checkAreaFormEtica)
                            .addComponent(checkAreaFormFisica)
                            .addComponent(checkAreaFormReligiosa)
                            .addComponent(checkAreaFormHumanidades)
                            .addComponent(checkAreaFormMatematicas)
                            .addComponent(checkAreaFormInformatica)
                            .addComponent(labelNivEducacion)
                            .addComponent(jLabel15)
                            .addComponent(checkNivEduTecnico)
                            .addComponent(checkNivEduTecnologico)
                            .addComponent(checkNivEduProfesional)
                            .addComponent(checkNivEduSuperior)
                            .addComponent(checkNivEduLicenciatura)
                            .addComponent(checkNivEduMaestria)
                            .addComponent(checkNivEduDoctorado)
                            .addComponent(checkNivEduEspecializacion))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInfoProfesionalLayout.setVerticalGroup(
            panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoProfesionalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInfoProfesional)
                .addGap(18, 18, 18)
                .addComponent(labelZona)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkZonaUrbana)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkZonaUrbanaMarginal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkZonaRural)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkZonaRuralDifAcc)
                .addGap(18, 18, 18)
                .addComponent(labelModalidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkModalidadAcademica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkModalidadTecnica)
                .addGap(18, 18, 18)
                .addComponent(labelEnfasis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisAgropecuaria)
                    .addComponent(checkEnfasisInformatica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisComercial)
                    .addComponent(checkEnfasisMineria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisPromSocial)
                    .addComponent(checkEnfasisSalud))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisFinanzas)
                    .addComponent(checkEnfasisRecreacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisAdministracion)
                    .addComponent(checkEnfasisTurismo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisEcologia)
                    .addComponent(checkEnfasisDeporte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkEnfasisMedAmbiente)
                    .addComponent(checkEnfasisOtro)
                    .addComponent(inputEnfasisOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkEnfasisIndustrial)
                .addGap(18, 18, 18)
                .addComponent(labelEtnia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkEtniaAfro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkEtniaIndigena)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkEtniaRom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkEtniaNinguna)
                .addGap(18, 18, 18)
                .addComponent(labelNivelEsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscTransicion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscInicial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscPrimaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscSecundaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscMedia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEscSuperior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNivEscOtro)
                    .addComponent(inputNivEscOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelGradoEsc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEscTransicion)
                    .addComponent(checkGradoEsc6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEscInicial)
                    .addComponent(checkGradoEsc7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEsc1)
                    .addComponent(checkGradoEsc8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEsc2)
                    .addComponent(checkGradoEsc9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEsc3)
                    .addComponent(checkGradoEsc10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEsc4)
                    .addComponent(checkGradoEsc11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkGradoEsc5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoProfesionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkGradoEscOtro)
                    .addComponent(inputGradoEscOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelAreaFormacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormCiencias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormSociales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormArtistica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormEtica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormFisica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormReligiosa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormHumanidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormMatematicas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAreaFormInformatica)
                .addGap(18, 18, 18)
                .addComponent(labelNivEducacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduTecnico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduTecnologico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduProfesional)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduSuperior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduLicenciatura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduEspecializacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduMaestria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkNivEduDoctorado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(botonActualizarInfoProfesional)
                .addContainerGap())
        );

        panelExperiencia.setBackground(new java.awt.Color(245, 245, 245));
        panelExperiencia.setBorder(null);

        labelExperiencia.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelExperiencia.setForeground(new java.awt.Color(15, 15, 111));
        labelExperiencia.setText("AÑOS DE EXPERIENCIA DOCENTE");

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel16.setText("<html>Las siguientes preguntas se refieren al numero de años que lleva desempeñando su<br> labor docente."
            + "Por favor responda la pregunta solo con el numero de años:<br>"
            + "ej. 5, que se refiere a 5 años de experiencia.</html>");

        labelExpNivPreescolar.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpNivPreescolar.setText("Experiencia docente en el nivel preescolar.");

        jLabel18.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(152, 152, 152));
        jLabel18.setText("<html>Años que lleva ejerciendo la docencia en el nivel preescolar.<br>"
            + "0 si no ha ejercido su labor en el nivel preescolar.</html>");

        inputExpNivPreescolar.setText("0");
        inputExpNivPreescolar.setToolTipText("");
        inputExpNivPreescolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputExpNivPreescolarActionPerformed(evt);
            }
        });

        labelExpNivPrimaria.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpNivPrimaria.setText("Experiencia docente en el nivel de básica primaria (1°, 2°, 3°, 5°)");

        jLabel20.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(152, 152, 152));
        jLabel20.setText("<html>Años que lleva ejerciendo la docencia en el nivel básica primaria.<br>"
            + "0 si no ha ejercido su labor en el nivel básica primaria.</html>");

        inputExpNivPrimaria.setText("0");

        labelExpNivSecundaria.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpNivSecundaria.setText("Experiencia docente en el nivel de básica secundaria (6°, 7°, 8°, 9°)");

        inputExpNivSecundaria.setText("0");
        inputExpNivSecundaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputExpNivSecundariaActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(152, 152, 152));
        jLabel22.setText("<html>Años que lleva ejerciendo la docencia en el nivel básica secundaria.<br>"
            + "0 si no ha ejercido su labor en el nivel básica secundaria.</html>");

        labelExpNivMedia.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpNivMedia.setText("Experiencia docente en el nivel de educación media (10°, 11°)");

        jLabel24.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(152, 152, 152));
        jLabel24.setText("<html>Años que lleva ejerciendo la docencia en el nivel de educación media.<br>"
            + "0 si no ha ejercido su labor en el nivel de educación media.</html>");

        inputExpNivMedia.setText("0");

        labelExpNivSuperior.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpNivSuperior.setText("Experiencia docente en el nivel de educación superior");

        jLabel26.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(152, 152, 152));
        jLabel26.setText("<html>Años que lleva ejerciendo la docencia en el nivel de educación superior.<br>"
            + "0 si no ha ejercido su labor en el nivel de educación superior.</html>");

        inputExpNivSuperior.setText("0");

        labelExpDocRural.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpDocRural.setText("Experiencia docente en el ámbito rural");

        jLabel28.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(152, 152, 152));
        jLabel28.setText("<html>Años que lleva ejerciendo la docencia en el ámbito rural.<br>"
            + "0 si no ha ejercido su labor en el ámbito rural.</html>");

        inputExpDocRural.setText("0");

        labelExpDocUrbano.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpDocUrbano.setText("Experiencia docente en el ámbito urbano");

        jLabel30.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(152, 152, 152));
        jLabel30.setText("<html>Años que lleva ejerciendo la docencia en el ámbito urbano.<br>"
            + "0 si no ha ejercido su labor en el ámbito urbano.</html>");

        inputExpDocUrbano.setText("0");

        labelExpDocSecPublico.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpDocSecPublico.setText("Experiencia docente en el sector publico");

        jLabel33.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(152, 152, 152));
        jLabel33.setText("<html>Años que lleva ejerciendo la docencia en el sector publico.<br>"
            + "0 si no ha ejercido su labor en el sector publico</html>");

        inputExpDocSecPublico.setText("0");

        lableExpDocSecPrivado.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        lableExpDocSecPrivado.setText("Experiencia docente en el sector privado");

        jLabel34.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(152, 152, 152));
        jLabel34.setText("<html>Años que lleva ejerciendo la docencia en el sector privado.<br>"
            + "0 si no ha ejercido su labor en el sector privado.</html>");

        inputExpDocPrivado.setText("0");

        labelExpDocTotal.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        labelExpDocTotal.setText("Experiencia docente total");

        jLabel36.setFont(new java.awt.Font("Ubuntu", 2, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(152, 152, 152));
        jLabel36.setText("<html>Total de años que lleva ejerciendo la labor docente<br>"
            + "(1 año incluye de 1 ­ 23 meses)</html>");

        inputExpDocTotal.setText("0");

        botonActualizarExperiencia.setText("Actualizar");
        botonActualizarExperiencia.setEnabled(false);
        botonActualizarExperiencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarExperienciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelExperienciaLayout = new javax.swing.GroupLayout(panelExperiencia);
        panelExperiencia.setLayout(panelExperienciaLayout);
        panelExperienciaLayout.setHorizontalGroup(
            panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExperienciaLayout.createSequentialGroup()
                .addGroup(panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExperienciaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(labelExperiencia))
                    .addGroup(panelExperienciaLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelExpNivPreescolar)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(labelExpNivPrimaria)
                            .addComponent(jLabel20)
                            .addComponent(inputExpNivPreescolar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputExpNivPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpNivSecundaria)
                            .addComponent(jLabel22)))
                    .addGroup(panelExperienciaLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelExpNivMedia)
                            .addComponent(inputExpNivSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(inputExpNivMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpNivSuperior)
                            .addComponent(jLabel26)
                            .addComponent(inputExpNivSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpDocRural)
                            .addComponent(jLabel28)
                            .addComponent(inputExpDocRural, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpDocUrbano)
                            .addComponent(jLabel30)
                            .addComponent(inputExpDocUrbano, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpDocSecPublico)
                            .addComponent(jLabel33)
                            .addComponent(inputExpDocSecPublico, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(inputExpDocPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36)
                            .addComponent(inputExpDocTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelExpDocTotal)
                            .addGroup(panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botonActualizarExperiencia)
                                .addComponent(lableExpDocSecPrivado)))))
                .addGap(83, 83, 83))
        );
        panelExperienciaLayout.setVerticalGroup(
            panelExperienciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExperienciaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelExperiencia)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(labelExpNivPreescolar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpNivPreescolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpNivPrimaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpNivPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpNivSecundaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpNivSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpNivMedia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpNivMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpNivSuperior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpNivSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpDocRural)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpDocRural, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpDocUrbano)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpDocUrbano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpDocSecPublico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpDocSecPublico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lableExpDocSecPrivado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpDocPrivado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelExpDocTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputExpDocTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(botonActualizarExperiencia)
                .addContainerGap())
        );

        setBackground(new java.awt.Color(245, 245, 245));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(750, 505));

        panelBuscar.setBackground(new java.awt.Color(245, 245, 245));
        panelBuscar.setBorder(null);

        inputTypeInformation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Personal", "Profesional", "Experiencia" }));

        labelBuscarLT.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelBuscarLT.setForeground(new java.awt.Color(15, 15, 111));
        labelBuscarLT.setText("BUSCAR LEADER TEACHER");

        labelBuscarPor.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelBuscarPor.setText("Buscar por:");

        labelDatoBusqueda.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelDatoBusqueda.setText("Dato busqueda:");

        labelTipoInformacion.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelTipoInformacion.setText("Tipo de Informacion");

        botonBuscar.setText("Buscar");

        inputBuscarPor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cedula", "Correo" }));
        inputBuscarPor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        botonCancelar.setText("Cancelar");

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBuscarLayout.createSequentialGroup()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelTipoInformacion))
                    .addGroup(panelBuscarLayout.createSequentialGroup()
                        .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(labelBuscarLT))
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelBuscarLayout.createSequentialGroup()
                                        .addComponent(labelBuscarPor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(labelDatoBusqueda))
                                    .addGroup(panelBuscarLayout.createSequentialGroup()
                                        .addComponent(botonBuscar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(botonCancelar)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputTypeInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputDatoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelBuscarLT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBuscarPor)
                    .addComponent(labelDatoBusqueda)
                    .addComponent(inputBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputDatoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscar)
                    .addComponent(botonCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTipoInformacion)
                    .addComponent(inputTypeInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollPanelPrincipal.setBackground(new java.awt.Color(245, 245, 245));
        scrollPanelPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 230, 230)));

        panelPrincipal.setBackground(new java.awt.Color(245, 245, 245));
        panelPrincipal.setBorder(null);
        panelPrincipal.setLayout(new java.awt.BorderLayout());
        scrollPanelPrincipal.setViewportView(panelPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPanelPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonMasculinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonMasculinoActionPerformed

    private void inputNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNombreActionPerformed

    private void checkZonaUrbanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkZonaUrbanaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkZonaUrbanaActionPerformed

    private void checkModalidadAcademicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkModalidadAcademicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkModalidadAcademicaActionPerformed

    private void inputEnfasisOtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputEnfasisOtroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputEnfasisOtroActionPerformed

    private void checkEtniaRomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEtniaRomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkEtniaRomActionPerformed

    private void inputExpNivPreescolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputExpNivPreescolarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputExpNivPreescolarActionPerformed

    private void botonActualizarExperienciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarExperienciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonActualizarExperienciaActionPerformed

    private void inputExpNivSecundariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputExpNivSecundariaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputExpNivSecundariaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizarExperiencia;
    private javax.swing.JButton botonActualizarInfoPersonal;
    private javax.swing.JButton botonActualizarInfoProfesional;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.ButtonGroup botonGroupModalidad;
    private javax.swing.ButtonGroup botonGroupNivEducacionAlcanzado;
    private javax.swing.ButtonGroup botonGroupSexo;
    private javax.swing.ButtonGroup botonGroupZona;
    private javax.swing.JCheckBox checkAreaFormArtistica;
    private javax.swing.JCheckBox checkAreaFormCiencias;
    private javax.swing.JCheckBox checkAreaFormEtica;
    private javax.swing.JCheckBox checkAreaFormFisica;
    private javax.swing.JCheckBox checkAreaFormHumanidades;
    private javax.swing.JCheckBox checkAreaFormInformatica;
    private javax.swing.JCheckBox checkAreaFormMatematicas;
    private javax.swing.JCheckBox checkAreaFormReligiosa;
    private javax.swing.JCheckBox checkAreaFormSociales;
    private javax.swing.JCheckBox checkEnfasisAdministracion;
    private javax.swing.JCheckBox checkEnfasisAgropecuaria;
    private javax.swing.JCheckBox checkEnfasisComercial;
    private javax.swing.JCheckBox checkEnfasisDeporte;
    private javax.swing.JCheckBox checkEnfasisEcologia;
    private javax.swing.JCheckBox checkEnfasisFinanzas;
    private javax.swing.JCheckBox checkEnfasisIndustrial;
    private javax.swing.JCheckBox checkEnfasisInformatica;
    private javax.swing.JCheckBox checkEnfasisMedAmbiente;
    private javax.swing.JCheckBox checkEnfasisMineria;
    private javax.swing.JCheckBox checkEnfasisOtro;
    private javax.swing.JCheckBox checkEnfasisPromSocial;
    private javax.swing.JCheckBox checkEnfasisRecreacion;
    private javax.swing.JCheckBox checkEnfasisSalud;
    private javax.swing.JCheckBox checkEnfasisTurismo;
    private javax.swing.JCheckBox checkEtniaAfro;
    private javax.swing.JCheckBox checkEtniaIndigena;
    private javax.swing.JCheckBox checkEtniaNinguna;
    private javax.swing.JCheckBox checkEtniaRom;
    private javax.swing.JCheckBox checkGradoEsc1;
    private javax.swing.JCheckBox checkGradoEsc10;
    private javax.swing.JCheckBox checkGradoEsc11;
    private javax.swing.JCheckBox checkGradoEsc2;
    private javax.swing.JCheckBox checkGradoEsc3;
    private javax.swing.JCheckBox checkGradoEsc4;
    private javax.swing.JCheckBox checkGradoEsc5;
    private javax.swing.JCheckBox checkGradoEsc6;
    private javax.swing.JCheckBox checkGradoEsc7;
    private javax.swing.JCheckBox checkGradoEsc8;
    private javax.swing.JCheckBox checkGradoEsc9;
    private javax.swing.JCheckBox checkGradoEscInicial;
    private javax.swing.JCheckBox checkGradoEscOtro;
    private javax.swing.JCheckBox checkGradoEscTransicion;
    private javax.swing.JCheckBox checkModalidadAcademica;
    private javax.swing.JCheckBox checkModalidadTecnica;
    private javax.swing.JCheckBox checkNivEduDoctorado;
    private javax.swing.JCheckBox checkNivEduEspecializacion;
    private javax.swing.JCheckBox checkNivEduLicenciatura;
    private javax.swing.JCheckBox checkNivEduMaestria;
    private javax.swing.JCheckBox checkNivEduProfesional;
    private javax.swing.JCheckBox checkNivEduSuperior;
    private javax.swing.JCheckBox checkNivEduTecnico;
    private javax.swing.JCheckBox checkNivEduTecnologico;
    private javax.swing.JCheckBox checkNivEscInicial;
    private javax.swing.JCheckBox checkNivEscMedia;
    private javax.swing.JCheckBox checkNivEscOtro;
    private javax.swing.JCheckBox checkNivEscPrimaria;
    private javax.swing.JCheckBox checkNivEscSecundaria;
    private javax.swing.JCheckBox checkNivEscSuperior;
    private javax.swing.JCheckBox checkNivEscTransicion;
    private javax.swing.JCheckBox checkZonaRural;
    private javax.swing.JCheckBox checkZonaRuralDifAcc;
    private javax.swing.JCheckBox checkZonaUrbana;
    private javax.swing.JCheckBox checkZonaUrbanaMarginal;
    private javax.swing.JTextField inputApellido;
    private javax.swing.JComboBox inputBuscarPor;
    private javax.swing.JLabel inputCedula;
    private javax.swing.JTextField inputCelular;
    private javax.swing.JTextField inputCorreo;
    private javax.swing.JTextField inputDatoBusqueda;
    private javax.swing.JTextField inputDireccion;
    private javax.swing.JTextField inputEnfasisOtro;
    private javax.swing.JTextField inputExpDocPrivado;
    private javax.swing.JTextField inputExpDocRural;
    private javax.swing.JTextField inputExpDocSecPublico;
    private javax.swing.JTextField inputExpDocTotal;
    private javax.swing.JTextField inputExpDocUrbano;
    private javax.swing.JTextField inputExpNivMedia;
    private javax.swing.JTextField inputExpNivPreescolar;
    private javax.swing.JTextField inputExpNivPrimaria;
    private javax.swing.JTextField inputExpNivSecundaria;
    private javax.swing.JTextField inputExpNivSuperior;
    private com.toedter.calendar.JDateChooser inputFecNacimiento;
    private javax.swing.JTextField inputGradoEscOtro;
    private javax.swing.JTextField inputNivEscOtro;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JComboBox inputTypeInformation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelApellido;
    private javax.swing.JLabel labelAreaFormacion;
    private javax.swing.JLabel labelBuscarLT;
    private javax.swing.JLabel labelBuscarPor;
    private javax.swing.JLabel labelCedula;
    private javax.swing.JLabel labelCelular;
    private javax.swing.JLabel labelCorreo;
    private javax.swing.JLabel labelDatoBusqueda;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelEnfasis;
    private javax.swing.JLabel labelEtnia;
    private javax.swing.JLabel labelExpDocRural;
    private javax.swing.JLabel labelExpDocSecPublico;
    private javax.swing.JLabel labelExpDocTotal;
    private javax.swing.JLabel labelExpDocUrbano;
    private javax.swing.JLabel labelExpNivMedia;
    private javax.swing.JLabel labelExpNivPreescolar;
    private javax.swing.JLabel labelExpNivPrimaria;
    private javax.swing.JLabel labelExpNivSecundaria;
    private javax.swing.JLabel labelExpNivSuperior;
    private javax.swing.JLabel labelExperiencia;
    private javax.swing.JLabel labelFecNacimiento;
    private javax.swing.JLabel labelGradoEsc;
    private javax.swing.JLabel labelInfoPersonal;
    private javax.swing.JLabel labelInfoProfesional;
    private javax.swing.JLabel labelModalidad;
    private javax.swing.JLabel labelNivEducacion;
    private javax.swing.JLabel labelNivelEsc;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelSexo;
    private javax.swing.JLabel labelTipoInformacion;
    private javax.swing.JLabel labelZona;
    private javax.swing.JLabel lableExpDocSecPrivado;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JPanel panelExperiencia;
    private javax.swing.JPanel panelInfoPersonal;
    private javax.swing.JPanel panelInfoProfesional;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JRadioButton radioButtonFemenino;
    private javax.swing.JRadioButton radioButtonMasculino;
    private javax.swing.JScrollPane scrollPanelPrincipal;
    // End of variables declaration//GEN-END:variables

    private ControladorCoordinador contCoordinador;

    private void actualizarPanelPrincipal(String tipoInformacion) {
        JPanel nuevoPanel = null;
        if (tipoInformacion.equals("Personal")) {
            nuevoPanel = panelInfoPersonal;
        } else if (tipoInformacion.equals("Profesional")) {
            nuevoPanel = panelInfoProfesional;
        } else if (tipoInformacion.equals("Experiencia")) {
            nuevoPanel = panelExperiencia;
        }
        panelPrincipal.removeAll();
        panelPrincipal.add(nuevoPanel);
        panelPrincipal.repaint();
        panelPrincipal.updateUI();
    } // Fin del metodo actualizarPanelPrincipal

    public void actualizarInfoLeaderTeacher() {
        contCoordinador = ControladorCoordinador.getInstance();
        // INFORMACION PERSONAL
        String cedula = inputCedula.getText();
        String nombres = inputNombre.getText();
        String apellidos = inputApellido.getText();
        String correo = inputCorreo.getText();
        String celular = inputCelular.getText();
        String direccion = inputDireccion.getText();
        Date fechanacimiento = inputFecNacimiento.getDate();
        String sexo = "";
        if (radioButtonMasculino.isSelected()) {
            sexo = radioButtonMasculino.getText();
        } else if (radioButtonFemenino.isSelected()) {
            sexo = radioButtonFemenino.getText();
        }
        // INFORMACION PROFESIONAL
        ArrayList<String> areaFormacionList = obtenerAreaFormacion();
        ArrayList<String> ltEnfasisList = obtenerEnfasis();
        ArrayList<String> ltEtnoeducacionList = obtnerEtnia();
        ArrayList<String> gradoEscolaridadLis = obtenerGradoEscolaridad();
        String modalidad = obtenerModalidad();
        ArrayList<String> ltNivelEscolaridadList = obtenerNivelEscolaridad();
        String nivelMaximoEduacion = obtenerNivelMaximoEduacion();
        String zona = obtenerZona();
        // EXPERIENCIA COMO DOCENTE
        String experienciaPreescolar = inputExpNivPreescolar.getText();
        String experienciaPrimaria = inputExpNivPrimaria.getText();
        String experienciaSecundaria = inputExpNivSecundaria.getText();
        String experienciaMedia = inputExpNivMedia.getText();
        String experienciaSuperior = inputExpNivSuperior.getText();
        String experienciaRural = inputExpDocRural.getText();
        String experienciaUrbana = inputExpDocUrbano.getText();
        String experienciaSectorPublico = inputExpDocSecPublico.getText();
        String experienciaSectorPrivado = inputExpDocPrivado.getText();
        String experienciaTotal = inputExpDocTotal.getText();
        // Realizamos la operacion de actualzacion en la base de datos        
        String resultOperation = contCoordinador.actualizarLeaderTeacher(cedula,
                nombres, apellidos, correo, celular, direccion, fechanacimiento,
                sexo, zona, modalidad, nivelMaximoEduacion, experienciaPreescolar,
                experienciaPrimaria, experienciaSecundaria, experienciaMedia,
                experienciaSuperior, experienciaRural, experienciaUrbana,
                experienciaSectorPublico, experienciaSectorPrivado, experienciaTotal,
                gradoEscolaridadLis, ltNivelEscolaridadList, ltEtnoeducacionList,
                areaFormacionList, ltEnfasisList);
        if (resultOperation.equals("OK")) {
            mostrarMensaje(JOptionPane.INFORMATION_MESSAGE, "Informacion",
                    "La actualizacion del registro se realizo correctamente");
            limpiarPanelInfoExperiencia();
            limpiarPanelInfoPersonal();
            limpiarPanelInfoProfesional();            
            botonBuscar.setEnabled(true);
        } else {
            mostrarMensaje(JOptionPane.ERROR_MESSAGE, "Error", resultOperation);     
        }    
    } // Fin del metodo actualizarInfoLeaderTeacher

    private void asignarEventos(EventosPanel_UpdateLT events) {
        inputTypeInformation.addActionListener(events);
        inputBuscarPor.addActionListener(events);
        botonBuscar.addActionListener(events);
        botonCancelar.addActionListener(events);
        botonActualizarInfoPersonal.addActionListener(events);
        botonActualizarInfoProfesional.addActionListener(events);
        botonActualizarExperiencia.addActionListener(events);
        
        checkEnfasisOtro.addActionListener(events);
        checkNivEscOtro.addActionListener(events);
        checkGradoEscOtro.addActionListener(events);
    } // Fin del metodo asignarEventos     

    
    private void consultarLeaderTeacher() {
        contCoordinador = ControladorCoordinador.getInstance();

        int column = inputBuscarPor.getSelectedIndex();
        String date = inputDatoBusqueda.getText();
        String resultOperation = contCoordinador.consultarLeaderTeacher(column, date);
        if (resultOperation != "OK") {
                mostrarMensaje(JOptionPane.ERROR_MESSAGE, "Error", resultOperation);            
        } else {       
            LeaderTeacher objLeaderTeacher = contCoordinador.getLeaderTeacherBuscado();
            if (objLeaderTeacher != null) {
                // Traemos la informacion de los atributos multivaluados
                List<LtEtnoeducacion> lt_etnoeducacion = contCoordinador.getLt_etnoeducacion();
                List<LtNivelEscolaridad> lt_nivel_escolaridad = contCoordinador.getLt_nivel_escolaridad();
                List<LtEnfasis> lt_enfasis = contCoordinador.getLt_enfasis();
                List<AreaFormacion> area_formacion = contCoordinador.getArea_formacion();
                List<GradoEscolarida> grado_escolarida = contCoordinador.getGrado_escolarida();
                // Mostramos la informacion Personal en la interfaz
                mostrarInfoPersonal(objLeaderTeacher);
                // Mostramos la informacion Profesional en la interfaz
                mostrarInfoProfesional(objLeaderTeacher, lt_etnoeducacion,
                        lt_nivel_escolaridad, lt_enfasis, area_formacion, grado_escolarida);
                // Mostramos la informacion acerca de la Experiencia como doscente
                mostrarInfoExperiencia(objLeaderTeacher);
                System.out.println("------------------------------------");
                botonActualizarInfoPersonal.setEnabled(true);
                botonActualizarInfoProfesional.setEnabled(true);
                botonActualizarExperiencia.setEnabled(true);
                botonBuscar.setEnabled(false);
            } else {
                mostrarMensaje(JOptionPane.ERROR_MESSAGE, "Error",
                        "Leader Teacher no encontrado\n"
                        + "Verifique que la cedula o el correo sean correctos");
            }
            limpiarPanelBuscar();
        }
    } // Fin del metodo consultar aspirante

    private void cancelarOperacion(){
        limpiarPanelBuscar();
        limpiarPanelInfoExperiencia();
        limpiarPanelInfoPersonal();
        limpiarPanelInfoProfesional();
        inputEnfasisOtro.setEnabled(false);
        inputNivEscOtro.setEnabled(false);
        inputGradoEscOtro.setEnabled(false);      
        botonActualizarInfoPersonal.setEnabled(false);
        botonActualizarInfoProfesional.setEnabled(false);
        botonActualizarExperiencia.setEnabled(false);
        botonBuscar.setEnabled(true);
    } // Fin del metodo cancelarOperacion
        
    public ArrayList<String> obtenerAreaFormacion() {
        ArrayList<String> areaFormacionList = new ArrayList<>();
        if (checkAreaFormCiencias.isSelected()) {
            areaFormacionList.add(checkAreaFormCiencias.getText());
        }
        if (checkAreaFormSociales.isSelected()) {
            areaFormacionList.add(checkAreaFormSociales.getText());
        }
        if (checkAreaFormArtistica.isSelected()) {
            areaFormacionList.add(checkAreaFormArtistica.getText());
        }
        if (checkAreaFormEtica.isSelected()) {
            areaFormacionList.add(checkAreaFormEtica.getText());
        }
        if (checkAreaFormFisica.isSelected()) {
            areaFormacionList.add(checkAreaFormFisica.getText());
        }
        if (checkAreaFormReligiosa.isSelected()) {
            areaFormacionList.add(checkAreaFormReligiosa.getText());
        }
        if (checkAreaFormHumanidades.isSelected()) {
            areaFormacionList.add(checkAreaFormHumanidades.getText());
        } 
        if (checkAreaFormMatematicas.isSelected()) {
            areaFormacionList.add(checkAreaFormMatematicas.getText());
        }
        if (checkAreaFormInformatica.isSelected()) {
            areaFormacionList.add(checkAreaFormInformatica.getText());
        }
        return areaFormacionList;
    } // Fin del metodo obtenerAreaFormacion

    public ArrayList<String> obtenerEnfasis() {
        ArrayList<String> ltEnfasisList = new ArrayList<>();
        if (checkEnfasisAgropecuaria.isSelected()) {
            ltEnfasisList.add(checkEnfasisAgropecuaria.getText());
        } 
        if (checkEnfasisComercial.isSelected()) {
            ltEnfasisList.add(checkEnfasisComercial.getText());
        } 
        if (checkEnfasisPromSocial.isSelected()) {
            ltEnfasisList.add(checkEnfasisPromSocial.getText());
        } 
        if (checkEnfasisFinanzas.isSelected()) {
            ltEnfasisList.add(checkEnfasisFinanzas.getText());
        } 
        if (checkEnfasisAdministracion.isSelected()) {
            ltEnfasisList.add(checkEnfasisAdministracion.getText());
        } 
        if (checkEnfasisEcologia.isSelected()) {
            ltEnfasisList.add(checkEnfasisEcologia.getText());
        } 
        if (checkEnfasisMedAmbiente.isSelected()) {
            ltEnfasisList.add(checkEnfasisMedAmbiente.getText());
        } 
        if (checkEnfasisIndustrial.isSelected()) {
            ltEnfasisList.add(checkEnfasisIndustrial.getText());
        } 
        if (checkEnfasisInformatica.isSelected()) {
            ltEnfasisList.add(checkEnfasisInformatica.getText());
        } 
        if (checkEnfasisMineria.isSelected()) {
            ltEnfasisList.add(checkEnfasisMineria.getText());
        } 
        if (checkEnfasisSalud.isSelected()) {
            ltEnfasisList.add(checkEnfasisSalud.getText());
        } 
        if (checkEnfasisRecreacion.isSelected()) {
            ltEnfasisList.add(checkEnfasisRecreacion.getText());
        } 
        if (checkEnfasisTurismo.isSelected()) {
            ltEnfasisList.add(checkEnfasisTurismo.getText());
        } 
        if (checkEnfasisDeporte.isSelected()) {
            ltEnfasisList.add(checkEnfasisDeporte.getText());
        } 
        if (checkEnfasisOtro.isSelected()) {
            ltEnfasisList.add(inputEnfasisOtro.getText()); // OJO
        }
        return ltEnfasisList;
    } // Fin del metodo obtenerEnfasis

    public ArrayList<String> obtnerEtnia() {
        ArrayList<String> ltEtnoeducacionList = new ArrayList<>();
        if (checkEtniaAfro.isSelected()) {
            ltEtnoeducacionList.add(checkEtniaAfro.getText());
        } 
        if (checkEtniaIndigena.isSelected()) {
            ltEtnoeducacionList.add(checkEtniaIndigena.getText());
        }
        if (checkEtniaRom.isSelected()) {
            ltEtnoeducacionList.add(checkEtniaRom.getText());
        }
        if (checkEtniaNinguna.isSelected()) {
            ltEtnoeducacionList.add(checkEtniaNinguna.getText());
        }
        return ltEtnoeducacionList;
    } // Fin del metodo obtnerEtnia

    public ArrayList<String> obtenerGradoEscolaridad() {
        ArrayList<String> gradoEscolaridadLis = new ArrayList<>();

        if (checkGradoEscTransicion.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEscTransicion.getText());
        } 
        if (checkGradoEscInicial.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEscInicial.getText());
        } 
        if (checkGradoEsc1.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc1.getText());
        } 
        if (checkGradoEsc2.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc2.getText());
        } 
        if (checkGradoEsc3.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc3.getText());
        } 
        if (checkGradoEsc4.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc4.getText());
        }  
        if (checkGradoEsc5.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc5.getText());
        }  
        if (checkGradoEsc6.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc6.getText());
        } 
        if (checkGradoEsc7.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc7.getText());
        } 
        if (checkGradoEsc8.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc8.getText());
        } 
        if (checkGradoEsc9.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc9.getText());
        } 
        if (checkGradoEsc10.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc10.getText());
        } 
        if (checkGradoEsc11.isSelected()) {
            gradoEscolaridadLis.add(checkGradoEsc11.getText());
        } 
        if (checkGradoEscOtro.isSelected()) {
            gradoEscolaridadLis.add(inputGradoEscOtro.getText()); // OJO
        }
        return gradoEscolaridadLis;
    } // Fin del metodo obtenerGradoEscolaridad

    public String obtenerModalidad() {
        String modalidad = "";
        if (checkModalidadAcademica.isSelected()) {
            modalidad = checkModalidadAcademica.getText();
        } 
        if (checkModalidadTecnica.isSelected()) {
            modalidad = checkModalidadTecnica.getText();
        }
        return modalidad;
    } // Fin del metodo obtenerModalidad

    public ArrayList<String> obtenerNivelEscolaridad() {
        ArrayList<String> ltNivelEscolaridadList = new ArrayList<>();
        if (checkNivEscTransicion.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscTransicion.getText());
        } 
        if (checkNivEscInicial.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscInicial.getText());
        } 
        if (checkNivEscPrimaria.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscPrimaria.getText());
        } 
        if (checkNivEscSecundaria.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscSecundaria.getText());
        } 
        if (checkNivEscMedia.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscMedia.getText());
        } 
        if (checkNivEscSuperior.isSelected()) {
            ltNivelEscolaridadList.add(checkNivEscSuperior.getText());
        } 
        if (checkNivEscOtro.isSelected()) {
            ltNivelEscolaridadList.add(inputNivEscOtro.getText());
        }
        return ltNivelEscolaridadList;
    } // Fin del metodo obtenerNivelEscolaridad   

    public String obtenerNivelMaximoEduacion() {
        String nivelMaximoEduacion = "";
        if (checkNivEduTecnico.isSelected()) {
            nivelMaximoEduacion = checkNivEduTecnico.getText();
        } 
        if (checkNivEduTecnologico.isSelected()) {
            nivelMaximoEduacion = checkNivEduTecnologico.getText();
        } 
        if (checkNivEduProfesional.isSelected()) {
            nivelMaximoEduacion = checkNivEduProfesional.getText();
        } 
        if (checkNivEduSuperior.isSelected()) {
            nivelMaximoEduacion = checkNivEduSuperior.getText();
        } 
        if (checkNivEduLicenciatura.isSelected()) {
            nivelMaximoEduacion = checkNivEduLicenciatura.getText();
        } 
        if (checkNivEduEspecializacion.isSelected()) {
            nivelMaximoEduacion = checkNivEduEspecializacion.getText();
        } 
        if (checkNivEduDoctorado.isSelected()) {
            nivelMaximoEduacion = checkNivEduDoctorado.getText();
        }
        return nivelMaximoEduacion;
    } // Fin del metodo obtenerNivelMaximoEduacion

    public String obtenerZona() {
        String zona = "";
        if (checkZonaRural.isSelected()) {
            zona = checkZonaRural.getText();
        } 
        if (checkZonaUrbanaMarginal.isSelected()) {
            zona = checkZonaUrbanaMarginal.getText();
        } 
        if (checkZonaRural.isSelected()) {
            zona = checkZonaRural.getText();
        } 
        if (checkZonaRuralDifAcc.isSelected()) {
            zona = checkZonaRuralDifAcc.getText();
        }
        return zona;
    } // Fin del metodo obtenerZona                                                                                    

    private void initPaneles() {
        panelPrincipal.add(panelInfoPersonal);
    } // Fin del metodo initPanels    


    
    private void limpiarPanelBuscar() {
        inputDatoBusqueda.setText("");
    }

    private void limpiarPanelInfoExperiencia() {
        inputExpNivPreescolar.setText("0");
        inputExpNivPrimaria.setText("0");
        inputExpNivSecundaria.setText("0");
        inputExpNivMedia.setText("0");
        inputExpNivSuperior.setText("0");
        inputExpDocRural.setText("0");
        inputExpDocUrbano.setText("0");
        inputExpDocSecPublico.setText("0");
        inputExpDocPrivado.setText("0");
        inputExpDocTotal.setText("0");
    } // Fin del metodo limpiarPanelInfoExperiencia

    private void limpiarPanelInfoPersonal(){    
        inputCedula.setText("");
        inputNombre.setText("");
        inputApellido.setText("");
        inputCorreo.setText("");
        inputCelular.setText("");
        inputDireccion.setText("");
        botonGroupSexo.clearSelection();     
        inputFecNacimiento.setDate(null);        
    }    
    
    private void limpiarPanelInfoProfesional() {
        // Modalidad
        botonGroupModalidad.clearSelection();
        // NivelMaximoEduacion
        botonGroupNivEducacionAlcanzado.clearSelection(); 
        
        // Zona    
        botonGroupZona.clearSelection();  
        // Etnoeduacion  
        checkEtniaAfro.setSelected(false);
        checkEtniaIndigena.setSelected(false);
        checkEtniaRom.setSelected(false);
        checkEtniaNinguna.setSelected(false);
        // AreaFormacion
        checkAreaFormCiencias.setSelected(false);
        checkAreaFormSociales.setSelected(false);
        checkAreaFormArtistica.setSelected(false);
        checkAreaFormEtica.setSelected(false);
        checkAreaFormFisica.setSelected(false);
        checkAreaFormReligiosa.setSelected(false);
        checkAreaFormHumanidades.setSelected(false);
        checkAreaFormMatematicas.setSelected(false);
        checkAreaFormInformatica.setSelected(false);
        // NivelEscolaridad
        checkNivEscTransicion.setSelected(false);
        checkNivEscInicial.setSelected(false);
        checkNivEscPrimaria.setSelected(false);
        checkNivEscSecundaria.setSelected(false);
        checkNivEscMedia.setSelected(false);
        checkNivEscSuperior.setSelected(false);
        checkNivEscOtro.setSelected(false);
        inputNivEscOtro.setText("");
        // Enfasis
        checkEnfasisAgropecuaria.setSelected(false);
        checkEnfasisComercial.setSelected(false);
        checkEnfasisPromSocial.setSelected(false);
        checkEnfasisFinanzas.setSelected(false);
        checkEnfasisAdministracion.setSelected(false);
        checkEnfasisEcologia.setSelected(false);
        checkEnfasisMedAmbiente.setSelected(false);
        checkEnfasisIndustrial.setSelected(false);
        checkEnfasisInformatica.setSelected(false);
        checkEnfasisMineria.setSelected(false);
        checkEnfasisSalud.setSelected(false);
        checkEnfasisRecreacion.setSelected(false);
        checkEnfasisTurismo.setSelected(false);
        checkEnfasisDeporte.setSelected(false);
        checkEnfasisOtro.setSelected(false);
        inputEnfasisOtro.setText("");
        // GradoEscolaridad
        checkGradoEscTransicion.setSelected(false);
        checkGradoEscInicial.setSelected(false);
        checkGradoEsc1.setSelected(false);
        checkGradoEsc2.setSelected(false);
        checkGradoEsc3.setSelected(false);
        checkGradoEsc4.setSelected(false);
        checkGradoEsc5.setSelected(false);
        checkGradoEsc6.setSelected(false);
        checkGradoEsc7.setSelected(false);
        checkGradoEsc8.setSelected(false);
        checkGradoEsc9.setSelected(false);
        checkGradoEsc10.setSelected(false);
        checkGradoEsc11.setSelected(false);
        checkGradoEscOtro.setSelected(false);
        inputGradoEscOtro.setText("");     
        // Campos de texto
        inputEnfasisOtro.setEnabled(false);
        inputNivEscOtro.setEnabled(false);
        inputGradoEscOtro.setEnabled(false);      
        
    } // Fin del metodo limpiarPanelInfoProfesional
    
    private void mostrarInfoExperiencia(LeaderTeacher objLeaderTeacher) {
        if (objLeaderTeacher.getExperienciaPreescolar() != null) {
            inputExpNivPreescolar.setText("" + objLeaderTeacher.getExperienciaPreescolar());
        }
        if (objLeaderTeacher.getExperienciaPrimaria() != null) {
            inputExpNivPrimaria.setText("" + objLeaderTeacher.getExperienciaPrimaria());
        }
        if (objLeaderTeacher.getExperienciaSecundaria() != null) {
            inputExpNivSecundaria.setText("" + objLeaderTeacher.getExperienciaSecundaria());
        }
        if (objLeaderTeacher.getExperienciaMedia() != null) {
            inputExpNivMedia.setText("" + objLeaderTeacher.getExperienciaMedia());
        }
        if (objLeaderTeacher.getExperienciaSuperior() != null) {
            inputExpNivSuperior.setText("" + objLeaderTeacher.getExperienciaSuperior());
        }
        if (objLeaderTeacher.getExperienciaRural() != null) {
            inputExpDocRural.setText("" + objLeaderTeacher.getExperienciaRural());
        }
        if (objLeaderTeacher.getExperienciaUrbana() != null) {
            inputExpDocUrbano.setText("" + objLeaderTeacher.getExperienciaUrbana());
        }
        if (objLeaderTeacher.getExperienciaSectorPublico() != null) {
            inputExpDocSecPublico.setText("" + objLeaderTeacher.getExperienciaSectorPublico());
        }
        if (objLeaderTeacher.getExperienciaSectorPribado() != null) {
            inputExpDocPrivado.setText("" + objLeaderTeacher.getExperienciaSectorPribado());
        }
        if (objLeaderTeacher.getExperienciaTotal() != null) {
            inputExpDocTotal.setText("" + objLeaderTeacher.getExperienciaTotal());
        }
    } // Fin del metodo mostrarInfoExperiencia        

    private void mostrarInfoPersonal(LeaderTeacher objLeaderTeacher) {
        inputCedula.setText(objLeaderTeacher.getCedula());
        inputNombre.setText(objLeaderTeacher.getNombres());
        inputApellido.setText(objLeaderTeacher.getApellidos());
        inputCorreo.setText(objLeaderTeacher.getCorreo());
        inputCelular.setText(objLeaderTeacher.getCelular());
        inputDireccion.setText(objLeaderTeacher.getDireccion());
        if (objLeaderTeacher.getSexo().equalsIgnoreCase("Masculino")) {
            radioButtonMasculino.setSelected(true);
        } else if (objLeaderTeacher.getSexo().equalsIgnoreCase("Femenino")) {
            radioButtonFemenino.setSelected(true);
        }
        inputFecNacimiento.setDate(objLeaderTeacher.getFechanacimiento());
    } // Fin del metodo mostrarInfoPersonal

    private void mostrarInfoProfesional(LeaderTeacher objLeaderTeacher,
            List<LtEtnoeducacion> lt_etnoeducacion,
            List<LtNivelEscolaridad> lt_nivel_escolaridad,
            List<LtEnfasis> lt_enfasis,
            List<AreaFormacion> area_formacion,
            List<GradoEscolarida> grado_escolarida) {
        
        mostrarZona(objLeaderTeacher);
        mostrarModalidad(objLeaderTeacher);
        mostrarNivelMaximoEduacion(objLeaderTeacher);
        mostrarEtnoeduacion(lt_etnoeducacion);
        mostrarNivelEscolaridad(lt_nivel_escolaridad);
        mostrarEnfasis(lt_enfasis);
        mostrarGradoEscolaridad(grado_escolarida);
        mostarAreaFormacion(area_formacion);

    }// Fin del metodo mostarInfoProfesional
    
    private void mostrarModalidad(LeaderTeacher objLeaderTeacher) {
        String modalidad = objLeaderTeacher.getModalidad();
        if (modalidad != null) {
            if (modalidad.equals(checkModalidadAcademica.getText())) {
                checkModalidadAcademica.setSelected(true);
            }
            if (modalidad.equals(checkModalidadTecnica.getText())) {
                checkModalidadTecnica.setSelected(true);
            }
        } 
    }
    
    public void mostrarNivelMaximoEduacion(LeaderTeacher objLeaderTeacher){
        String nivelMaximoEducacion = objLeaderTeacher.getNivelEducacion();
        if (nivelMaximoEducacion != null) {
            if (nivelMaximoEducacion.equals(checkNivEduTecnico.getText())) {
                checkNivEduTecnico.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduTecnologico.getText())) {
                checkNivEduTecnologico.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduProfesional.getText())) {
                checkNivEduProfesional.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduSuperior.getText())) {
                checkNivEduSuperior.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduLicenciatura.getText())) {
                checkNivEduLicenciatura.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduEspecializacion.getText())) {
                checkNivEduEspecializacion.setSelected(true);
            } else if (nivelMaximoEducacion.equals(checkNivEduDoctorado.getText())) {
                checkNivEduDoctorado.setSelected(true);
            }
        }
    }
    
    private void mostrarZona(LeaderTeacher objLeaderTeacher) {
        String zona = objLeaderTeacher.getZona();
        if (zona != null) {
            if (zona.equals(checkZonaRural.getText())) {
                checkZonaRural.setSelected(true);
            } else if (zona.equals(checkZonaUrbanaMarginal.getText())) {
                checkZonaUrbanaMarginal.setSelected(true);
            } else if (zona.equals(checkZonaRural.getText())) {
                checkZonaRural.setSelected(true);
            } else if (zona.equals(checkZonaRuralDifAcc.getText())) {
                checkZonaRuralDifAcc.setSelected(true);
            }
        }
    }
    
    private void mostrarEtnoeduacion(List<LtEtnoeducacion> lt_etnoeducacion) {
        if (lt_etnoeducacion != null) {
            for (int x = 0; x < lt_etnoeducacion.size(); x++) {
                String etnoActual = lt_etnoeducacion.get(x).getLtEtnoeducacionPK().getEtnoeducacion();
                if (etnoActual.equals(checkEtniaAfro.getText())) {
                    checkEtniaAfro.setSelected(true);
                } else if (etnoActual.equals(checkEtniaIndigena.getText())) {
                    checkEtniaIndigena.setSelected(true);
                } else if (etnoActual.equals(checkEtniaRom.getText())) {
                    checkEtniaRom.setSelected(true);
                } else if (etnoActual.equals(checkEtniaNinguna.getText())) {
                    checkEtniaNinguna.setSelected(true);
                }
            }
        }
    } // Fin del metodo mostrarEtnoeduacion

    private void mostarAreaFormacion(List<AreaFormacion> area_formacion) {
        if (area_formacion != null) {
            for (int x = 0; x < area_formacion.size(); x++) {
                String areaActual = area_formacion.get(x).getAreaFormacionPK().getAreaFormacion();
                if (areaActual.equals(checkAreaFormCiencias.getText())) {
                    checkAreaFormCiencias.setSelected(true);
                } else if (areaActual.equals(checkAreaFormSociales.getText())) {
                    checkAreaFormSociales.setSelected(true);
                } else if (areaActual.equals(checkAreaFormArtistica.getText())) {
                    checkAreaFormArtistica.setSelected(true);
                } else if (areaActual.equals(checkAreaFormEtica.getText())) {
                    checkAreaFormEtica.setSelected(true);
                } else if (areaActual.equals(checkAreaFormFisica.getText())) {
                    checkAreaFormFisica.setSelected(true);
                } else if (areaActual.equals(checkAreaFormReligiosa.getText())) {
                    checkAreaFormReligiosa.setSelected(true);
                } else if (areaActual.equals(checkAreaFormHumanidades.getText())) {
                    checkAreaFormHumanidades.setSelected(true);
                } else if (areaActual.equals(checkAreaFormMatematicas.getText())) {
                    checkAreaFormMatematicas.setSelected(true);
                } else if (areaActual.equals(checkAreaFormInformatica.getText())) {
                    checkAreaFormInformatica.setSelected(true);
                }
            }
        }
    } // Fin del metodo mostarAreaFormacion

    private void mostrarNivelEscolaridad(List<LtNivelEscolaridad> lt_nivel_escolaridad) {
        if (lt_nivel_escolaridad != null) {
            for (int x = 0 ; x < lt_nivel_escolaridad.size(); x++){
                String nivelEscolaridad = lt_nivel_escolaridad.get(x).getLtNivelEscolaridadPK().getNivelEscolaridad();
                if (nivelEscolaridad.equals(checkNivEscTransicion.getText())) {
                    checkNivEscTransicion.setSelected(true);
                }
                else if (nivelEscolaridad.equals(checkNivEscInicial.getText())) {
                    checkNivEscInicial.setSelected(true);
                }
                else if (nivelEscolaridad.equals(checkNivEscPrimaria.getText())) {
                    checkNivEscPrimaria.setSelected(true);
                }
                else if (nivelEscolaridad.equals(checkNivEscSecundaria.getText())) {
                    checkNivEscSecundaria.setSelected(true);
                }
                else if (nivelEscolaridad.equals(checkNivEscMedia.getText())) {
                    checkNivEscMedia.setSelected(true);
                }
                else if (nivelEscolaridad.equals(checkNivEscSuperior.getText())) {
                    checkNivEscSuperior.setSelected(true);
                }
                else  {
                    checkNivEscOtro.setSelected(true);
                    inputNivEscOtro.setEnabled(true);
                    inputNivEscOtro.setText(nivelEscolaridad);
                }       
            }

        }
   
    }
    
    private void mostrarEnfasis(List<LtEnfasis> lt_enfasis) {
        if (lt_enfasis != null) {
            for (int x = 0; x < lt_enfasis.size(); x++) {
                String enfasis = lt_enfasis.get(x).getLtEnfasisPK().getEnfasis();
                if (enfasis.equals(checkEnfasisAgropecuaria.getText())) {
                    checkEnfasisAgropecuaria.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisComercial.getText())) {
                    checkEnfasisComercial.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisPromSocial.getText())) {
                    checkEnfasisPromSocial.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisFinanzas.getText())) {
                    checkEnfasisFinanzas.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisAdministracion.getText())) {
                    checkEnfasisAdministracion.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisEcologia.getText())) {
                    checkEnfasisEcologia.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisMedAmbiente.getText())) {
                    checkEnfasisMedAmbiente.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisIndustrial.getText())) {
                    checkEnfasisIndustrial.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisInformatica.getText())) {
                    checkEnfasisInformatica.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisMineria.getText())) {
                    checkEnfasisMineria.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisSalud.getText())) {
                    checkEnfasisSalud.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisRecreacion.getText())) {
                    checkEnfasisRecreacion.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisTurismo.getText())) {
                    checkEnfasisTurismo.setSelected(true);
                }
                else if (enfasis.equals(checkEnfasisDeporte.getText())) {
                    checkEnfasisDeporte.setSelected(true);
                }
                else  {
                    checkEnfasisOtro.setSelected(true);
                    inputEnfasisOtro.setEnabled(true);
                    inputEnfasisOtro.setText(enfasis);
                }
            }
        }
    }    
    
    private void mostrarGradoEscolaridad(List<GradoEscolarida> grado_escolarida) {
        if (grado_escolarida != null) {
            for (int x = 0; x < grado_escolarida.size(); x++) {
                String gradoEscolaridad = grado_escolarida.get(x).getGradoEscolaridaPK().getGradoEscolarida();
                if (gradoEscolaridad.equals(checkGradoEscTransicion.getText())) {
                    checkGradoEscTransicion.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEscInicial.getText())) {
                    checkGradoEscInicial.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc1.getText())) {
                    checkGradoEsc1.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc2.getText())) {
                    checkGradoEsc2.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc3.getText())) {
                    checkGradoEsc3.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc4.getText())) {
                    checkGradoEsc4.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc5.getText())) {
                    checkGradoEsc5.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc6.getText())) {
                    checkGradoEsc6.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc7.getText())) {
                    checkGradoEsc7.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc8.getText())) {
                    checkGradoEsc8.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc9.getText())) {
                    checkGradoEsc9.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc10.getText())) {
                    checkGradoEsc10.setSelected(true);
                }
                else if (gradoEscolaridad.equals(checkGradoEsc11.getText())) {
                    checkGradoEsc11.setSelected(true);
                }
                else {
                    checkGradoEscOtro.setSelected(true);
                    inputGradoEscOtro.setEnabled(true);
                    inputGradoEscOtro.setText(gradoEscolaridad);
                }           
            }
        }
    }
    
    private void mostrarMensaje(int tipo, String titulo, String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, titulo, tipo);
    } // Fin del metodo mostrarMensaje 

    private class EventosPanel_UpdateLT implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == inputTypeInformation) {
                String tipo = inputTypeInformation.getSelectedItem().toString();
                actualizarPanelPrincipal(tipo);
            }
            if (e.getSource() == inputBuscarPor) {
                limpiarPanelBuscar();
            }

            if (e.getSource() == botonBuscar) {
                consultarLeaderTeacher();
            }
            if (e.getSource() == botonCancelar) {
                cancelarOperacion();
            }

            if (e.getSource() == botonActualizarInfoPersonal) {
                actualizarInfoLeaderTeacher();
            }

            if (e.getSource() == botonActualizarInfoProfesional) {
                actualizarInfoLeaderTeacher();
            }

            if (e.getSource() == botonActualizarExperiencia) {
                actualizarInfoLeaderTeacher();
            }
            
            if (e.getSource() == checkEnfasisOtro) {
                if (checkEnfasisOtro.isSelected()) {
                    inputEnfasisOtro.setEnabled(true);
                } else {
                    inputEnfasisOtro.setText("");
                    inputEnfasisOtro.setEnabled(false);
                }
            }
            
            if (e.getSource() == checkNivEscOtro) {
                if (checkNivEscOtro.isSelected()) {
                    inputNivEscOtro.setEnabled(true);
                } else {
                    inputNivEscOtro.setText("");
                    inputNivEscOtro.setEnabled(false);
                }                
            }
                        
            if (e.getSource() == checkGradoEscOtro) {  
                if (checkGradoEscOtro.isSelected()) {
                    inputGradoEscOtro.setEnabled(true);
                } else {
                    inputGradoEscOtro.setText("");
                    inputGradoEscOtro.setEnabled(false);
                }                 
            }
        }

    } // Fin de la clase EventosPanelLogin

} // Fin de la clase PanelLogin
