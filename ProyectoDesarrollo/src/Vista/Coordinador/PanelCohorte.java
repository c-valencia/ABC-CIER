/** 
 * Nombre del Archivo: Item.java
 * Autores: JULIAN GARCIA RICO (1225435) 
 *          DIEGO FERNANDO BEDOYA (1327749) 
 *          CRISTIAN ALEXANDER VALENCIA TORRES (1329454) 
 *          OSCAR STEVEN ROMERO BERON (1326750) 
 */
package Vista.Coordinador;

import Controlador.ControladorCohorte;
import Controlador.ControladorTablas;
import Logica.Aspirante;

import Logica.Curso;
import Persistencia.Conexion;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author oscar
 */
public class PanelCohorte extends javax.swing.JPanel {

    /**
     * Creates new form PanelLogin
     */
    public PanelCohorte() {
        initComponents();

        // agregar nuevos paneles
        misComponentes();
        
        // Eventos 
        EventosPanelLogin events = new EventosPanelLogin();
        asignarEventos(events);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelAgregarCursos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonGuardarCursoSeleccionado = new javax.swing.JButton();
        jButtonSiguienteEnPCurso = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCursos = new javax.swing.JTable();
        jLabelFechaInicio = new javax.swing.JLabel();
        jLabelFechaFin = new javax.swing.JLabel();
        jLabelPACCodCohorte = new javax.swing.JLabel();
        jButtonListarCursos = new javax.swing.JButton();
        jPanelCrearCohorte = new javax.swing.JPanel();
        jDateChooserFechaInicio = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelCodCohorte = new javax.swing.JLabel();
        jButtonGuardarCohorte = new javax.swing.JButton();
        jButtonSiguienteCohorte = new javax.swing.JButton();
        jPanelCrearMatricula = new javax.swing.JPanel();
        jButtonGuardarMatricula = new javax.swing.JButton();
        jButtonFinalizarMatricula = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLeaderTeacher = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonBuscarAspirantes = new javax.swing.JButton();
        jComboBoxPCMZona = new javax.swing.JComboBox();
        jComboBoxPCMArea = new javax.swing.JComboBox();
        jDialogAspirantes = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAspiratesBD = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabelNombreArea = new javax.swing.JLabel();
        jButtonSeleccionarAspirante = new javax.swing.JButton();
        panelPrincipal = new javax.swing.JPanel();

        jPanelAgregarCursos.setBackground(new java.awt.Color(245, 245, 245));
        jPanelAgregarCursos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setText("Fecha de inicio:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel3.setText("Fecha de finalizacion:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel4.setText("Codigo de la cohorte:");

        jButtonGuardarCursoSeleccionado.setText("GUARDAR");

        jButtonSiguienteEnPCurso.setText("SIGUIENTE >>");

        jScrollPane1.setBackground(new java.awt.Color(245, 243, 241));

        jTableCursos.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jTableCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "NOMBRE", "Â¿INCLUIR?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableCursos);
        if (jTableCursos.getColumnModel().getColumnCount() > 0) {
            jTableCursos.getColumnModel().getColumn(0).setMinWidth(80);
            jTableCursos.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTableCursos.getColumnModel().getColumn(0).setMaxWidth(80);
            jTableCursos.getColumnModel().getColumn(2).setMinWidth(80);
            jTableCursos.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTableCursos.getColumnModel().getColumn(2).setMaxWidth(80);
        }

        jLabelFechaInicio.setText("Fecha de inicio");

        jLabelFechaFin.setText("Fecha de fin");

        jLabelPACCodCohorte.setText("Cod. cohorte");

        jButtonListarCursos.setText("Listar Cursos");

        javax.swing.GroupLayout jPanelAgregarCursosLayout = new javax.swing.GroupLayout(jPanelAgregarCursos);
        jPanelAgregarCursos.setLayout(jPanelAgregarCursosLayout);
        jPanelAgregarCursosLayout.setHorizontalGroup(
            jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAgregarCursosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonListarCursos)
                .addGap(18, 18, 18)
                .addComponent(jButtonGuardarCursoSeleccionado)
                .addGap(18, 18, 18)
                .addComponent(jButtonSiguienteEnPCurso)
                .addGap(43, 43, 43))
            .addGroup(jPanelAgregarCursosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAgregarCursosLayout.createSequentialGroup()
                        .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelFechaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(jLabelFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelPACCodCohorte, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 18, Short.MAX_VALUE))
        );
        jPanelAgregarCursosLayout.setVerticalGroup(
            jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgregarCursosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabelFechaInicio)
                    .addComponent(jLabelPACCodCohorte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelFechaFin))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanelAgregarCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardarCursoSeleccionado)
                    .addComponent(jButtonSiguienteEnPCurso)
                    .addComponent(jButtonListarCursos))
                .addGap(28, 28, 28))
        );

        jPanelCrearCohorte.setBackground(new java.awt.Color(245, 245, 245));
        jPanelCrearCohorte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Fecha de inicio:");

        jLabel6.setText("Fecha de finalizacion:");

        jLabel7.setText("Codigo de la cohorte:");

        jLabelCodCohorte.setText("Aun no ha guardado");

        jButtonGuardarCohorte.setText("GUARDAR");

        jButtonSiguienteCohorte.setText("SIGUIENTE >>");

        javax.swing.GroupLayout jPanelCrearCohorteLayout = new javax.swing.GroupLayout(jPanelCrearCohorte);
        jPanelCrearCohorte.setLayout(jPanelCrearCohorteLayout);
        jPanelCrearCohorteLayout.setHorizontalGroup(
            jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearCohorteLayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCrearCohorteLayout.createSequentialGroup()
                        .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooserFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCodCohorte, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(220, 220, 220))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCrearCohorteLayout.createSequentialGroup()
                        .addComponent(jButtonGuardarCohorte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSiguienteCohorte)
                        .addGap(43, 43, 43))))
        );
        jPanelCrearCohorteLayout.setVerticalGroup(
            jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearCohorteLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCrearCohorteLayout.createSequentialGroup()
                        .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jDateChooserFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addComponent(jDateChooserFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelCodCohorte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(jPanelCrearCohorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardarCohorte)
                    .addComponent(jButtonSiguienteCohorte))
                .addGap(31, 31, 31))
        );

        jPanelCrearMatricula.setBackground(new java.awt.Color(245, 245, 245));
        jPanelCrearMatricula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonGuardarMatricula.setText("GUARDAR");

        jButtonFinalizarMatricula.setText("FINALIZAR");

        jScrollPane2.setBackground(new java.awt.Color(245, 245, 245));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableLeaderTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombres", "Apellidos", "Email", "Codigo", "Area"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableLeaderTeacher);
        if (jTableLeaderTeacher.getColumnModel().getColumnCount() > 0) {
            jTableLeaderTeacher.getColumnModel().getColumn(0).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTableLeaderTeacher.getColumnModel().getColumn(1).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(2).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(3).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(4).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(5).setResizable(false);
            jTableLeaderTeacher.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 15, 111));
        jLabel1.setText("BUSCAR ASPIRANTES");

        jLabel8.setText("Por zona:");

        jLabel9.setText("Por Area:");

        jButtonBuscarAspirantes.setText("Buscar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxPCMZona, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jComboBoxPCMArea, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addComponent(jButtonBuscarAspirantes)
                        .addGap(169, 169, 169))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBoxPCMZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jComboBoxPCMArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBuscarAspirantes)
                        .addGap(50, 50, 50))))
        );

        javax.swing.GroupLayout jPanelCrearMatriculaLayout = new javax.swing.GroupLayout(jPanelCrearMatricula);
        jPanelCrearMatricula.setLayout(jPanelCrearMatriculaLayout);
        jPanelCrearMatriculaLayout.setHorizontalGroup(
            jPanelCrearMatriculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearMatriculaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCrearMatriculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCrearMatriculaLayout.createSequentialGroup()
                        .addGap(33, 516, Short.MAX_VALUE)
                        .addComponent(jButtonGuardarMatricula)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFinalizarMatricula)))
                .addContainerGap())
        );
        jPanelCrearMatriculaLayout.setVerticalGroup(
            jPanelCrearMatriculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearMatriculaLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCrearMatriculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFinalizarMatricula)
                    .addComponent(jButtonGuardarMatricula))
                .addContainerGap())
        );

        jDialogAspirantes.setTitle("LISTado");

        jTableAspiratesBD.setBackground(new java.awt.Color(245, 245, 245));
        jTableAspiratesBD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableAspiratesBD);

        jLabel10.setText("Listado de estudiante del area");

        jLabelNombreArea.setText("nombre del area");

        jButtonSeleccionarAspirante.setText("SELECCIONAR");

        javax.swing.GroupLayout jDialogAspirantesLayout = new javax.swing.GroupLayout(jDialogAspirantes.getContentPane());
        jDialogAspirantes.getContentPane().setLayout(jDialogAspirantesLayout);
        jDialogAspirantesLayout.setHorizontalGroup(
            jDialogAspirantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAspirantesLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNombreArea)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDialogAspirantesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogAspirantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAspirantesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSeleccionarAspirante)))
                .addContainerGap())
        );
        jDialogAspirantesLayout.setVerticalGroup(
            jDialogAspirantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAspirantesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jDialogAspirantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelNombreArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSeleccionarAspirante)
                .addContainerGap())
        );

        jDialogAspirantes.getAccessibleContext().setAccessibleParent(jButtonBuscarAspirantes);

        setBackground(new java.awt.Color(245, 245, 245));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(750, 505));

        panelPrincipal.setBackground(new java.awt.Color(245, 245, 245));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscarAspirantes;
    private javax.swing.JButton jButtonFinalizarMatricula;
    private javax.swing.JButton jButtonGuardarCohorte;
    private javax.swing.JButton jButtonGuardarCursoSeleccionado;
    private javax.swing.JButton jButtonGuardarMatricula;
    private javax.swing.JButton jButtonListarCursos;
    private javax.swing.JButton jButtonSeleccionarAspirante;
    private javax.swing.JButton jButtonSiguienteCohorte;
    private javax.swing.JButton jButtonSiguienteEnPCurso;
    private javax.swing.JComboBox jComboBoxPCMArea;
    private javax.swing.JComboBox jComboBoxPCMZona;
    private com.toedter.calendar.JDateChooser jDateChooserFechaFin;
    private com.toedter.calendar.JDateChooser jDateChooserFechaInicio;
    private javax.swing.JDialog jDialogAspirantes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCodCohorte;
    private javax.swing.JLabel jLabelFechaFin;
    private javax.swing.JLabel jLabelFechaInicio;
    private javax.swing.JLabel jLabelNombreArea;
    private javax.swing.JLabel jLabelPACCodCohorte;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAgregarCursos;
    private javax.swing.JPanel jPanelCrearCohorte;
    private javax.swing.JPanel jPanelCrearMatricula;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableAspiratesBD;
    private javax.swing.JTable jTableCursos;
    private javax.swing.JTable jTableLeaderTeacher;
    private javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables
    private Controlador.ControladorCohorte controlCohorte;
    private Vector <Logica.Curso> listadoCursos;
    private Vector <Logica.Curso> cursosSelect;
    private Vector <Aspirante> listaAspirantes;
    private Vector<Aspirante> listadoLT;
    private String cohorte;
    private Date fechafin;
    private Date fechaInicio;
    private int poslistaLT;
    
    private void misComponentes(){
        // vectores
        listadoLT = new Vector();
        poslistaLT = 0;
        // inicio del panel cohorte
        panelPrincipal.add(jPanelCrearCohorte);
        
        // inicio del controlador
        controlCohorte = new ControladorCohorte();
        
        // seteo de botones
        jButtonSiguienteCohorte.setEnabled(false);
        jButtonSiguienteEnPCurso.setEnabled(false);
        jButtonGuardarCursoSeleccionado.setEnabled(false);
        jButtonGuardarMatricula.setEnabled(true);
        jButtonFinalizarMatricula.setEnabled(false);
        
        // seteo de combobox
        jComboBoxPCMZona.addItem("");
        jComboBoxPCMZona.addItem("Amazonas");
        jComboBoxPCMZona.addItem("Buenaventura");
        jComboBoxPCMZona.addItem("Buga");
        jComboBoxPCMZona.addItem("Cali");
        jComboBoxPCMZona.addItem("CaquetÃ¡");
        jComboBoxPCMZona.addItem("Cartago");
        jComboBoxPCMZona.addItem("Florencia");
        jComboBoxPCMZona.addItem("Huila");
        jComboBoxPCMZona.addItem("IbaguÃ©");
        jComboBoxPCMZona.addItem("Ipiales");
        jComboBoxPCMZona.addItem("JamundÃ­");
        jComboBoxPCMZona.addItem("NariÃ±o");
        jComboBoxPCMZona.addItem("Neiva");
        jComboBoxPCMZona.addItem("Palmira");
        jComboBoxPCMZona.addItem("Pasto");
        jComboBoxPCMZona.addItem("PopayÃ¡n");
        jComboBoxPCMZona.addItem("Putumayo");
        jComboBoxPCMZona.addItem("Tolima");
        jComboBoxPCMZona.addItem("Tumaco");
        jComboBoxPCMZona.addItem("Valle del Cauca");
        
        // bloqueo de las cabeceras de las tablas
        jTableAspiratesBD.getTableHeader().setReorderingAllowed(false);
        jTableLeaderTeacher.getTableHeader().setReorderingAllowed(false);
        jTableCursos.getTableHeader().setReorderingAllowed(false);
    } // fin del metodo de misComponentes       

    private void actualizarPanelPrincipal(JPanel panelNuevo) {
        panelPrincipal.removeAll();
        panelPrincipal.add(panelNuevo);
        panelPrincipal.repaint();
        panelPrincipal.updateUI();
        limpiarTablas(jTableAspiratesBD);
        limpiarTablas(jTableCursos);
        limpiarTablas(jTableLeaderTeacher);
    } // Fin del metodo actualizarPanelPrincipal
    
    private void asignarEventos(EventosPanelLogin events){
        jButtonSiguienteCohorte.addActionListener(events);
        jButtonGuardarCohorte.addActionListener(events);
        jButtonSiguienteEnPCurso.addActionListener(events);
        jButtonBuscarAspirantes.addActionListener(events);
        jButtonListarCursos.addActionListener(events);
        jButtonGuardarCursoSeleccionado.addActionListener(events);
        jButtonSeleccionarAspirante.addActionListener(events);
        jButtonFinalizarMatricula.addActionListener(events);
        jButtonGuardarMatricula.addActionListener(events);
    } // Fin del metodo asignarEventos
    
    /**
     * trae los campos que hay en la bd y los muestra en la tabla que apaerece 
     * en el dialog y lo incluye en la tabla del panelMatricula
     */
    private void aspirantesSeleccionados(){
        TableModel TMAspirante = jTableAspiratesBD.getModel();
        poslistaLT = listadoLT.size();
        DefaultTableModel TMSelecionados = (DefaultTableModel) jTableLeaderTeacher.getModel();
        int fila = TMAspirante.getRowCount();
        
        if(0 == JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que estos son los aspirantes que va a seleccionar?")){
            for(int i=0; i< fila; i++) { 
                if(TMAspirante.getValueAt(i, 4).equals(true)){
                    listadoLT.addElement(listaAspirantes.get(i));
                }
            }
            
            for (int i = poslistaLT; i < listadoLT.size(); i++){
                
                TMSelecionados.addRow(new Object[] {listadoLT.get(i).getCedula(), listadoLT.get(i).getNombres(),
                                                    listadoLT.get(i).getApellidos(), listadoLT.get(i).getCorreo(),
                                                    cursosSelect.get(jComboBoxPCMArea.getSelectedIndex()- 1).getIdCurso(),
                                                    cursosSelect.get(jComboBoxPCMArea.getSelectedIndex()- 1).getNombre()});
            }
            
            jDialogAspirantes.setVisible(false);
        }
    } // fin del metodo AspirantesSeleccionados
    
    /**
     * crea la cohorte, la guarda en la bd y permite el acceso a los paneles siguientes
     */
    private void crearCohorte(){
        
        fechaInicio = jDateChooserFechaInicio.getDate();
        fechafin = jDateChooserFechaFin.getDate();
        String estado = "Las fechas ya existen para una cohorte, intente con otras fechas";
        String idcohorte = controlCohorte.buscarCohorte(fechaInicio ,fechafin).getIdCohorte();
        
        if( idcohorte.equals("")){
            estado = controlCohorte.ingresarCohorte(fechaInicio ,fechafin); 
            cohorte= controlCohorte.buscarCohorte(fechaInicio ,fechafin).getIdCohorte();
        }
        if (estado.equals("Guardado exitoso")){
            JOptionPane.showMessageDialog(null, estado + " en la base de datos");
            jLabelCodCohorte.setText(cohorte);
            jButtonSiguienteCohorte.setEnabled(true);
            jButtonGuardarCohorte.setEnabled(false);
        }
        else{
            JOptionPane.showMessageDialog(null, estado);
        }
        System.out.println("conexion = " + Conexion.cantidadConexiones);
        // informacion que aparecera en el siguiente panel (panelCurso)
        jLabelPACCodCohorte.setText(cohorte);
        jLabelFechaInicio.setText(new Date(fechaInicio.getTime()) + "");
        jLabelFechaFin.setText(fechafin + "");
    }// fin del metodo crearCohorte
    
    /**
     * crea un jdialog donde se muesstra lo aspirantes que hay en un departamento por area
     */
    private void crearJDialog(){
        jDialogAspirantes.setVisible(true);
        jDialogAspirantes.pack();
        listarALTs();
    } // fin del metodo crearJDialogs
    
    
    /**
     * 
     */
    private void crearMatricula(){
        TableModel curso = jTableLeaderTeacher.getModel();
        if(0 == JOptionPane.showConfirmDialog(null, "Â¿Esta seguro que quiere matricular solo a estos Aspirantes?")){
            JOptionPane.showMessageDialog(null, "Espere un momento esta guardando en la base de datos!");
            for (int i  = 0; i < listadoLT.size(); i++){
                controlCohorte.ingresarLT(listadoLT.get(i));
                controlCohorte.ingresarMatricula(cohorte, curso.getValueAt(i, 4).toString(), listadoLT.get(i).getCedula());
                controlCohorte.modificarAspirante(curso.getValueAt(i, 4).toString(), listadoLT.get(i).getCedula(), false);
                controlCohorte.crearUsuario(listadoLT.get(i));
                controlCohorte.crearTarea(listadoLT.get(i).getCedula(), curso.getValueAt(i, 4).toString());
                System.out.println(" si ingreso");
            }

            jButtonGuardarMatricula.setEnabled(false);
            jButtonFinalizarMatricula.setEnabled(true);
        }
    }
    
    /**
     * muestra todos los cursos que hay habilitados en la bd
     * @param tabla 
     */
    private void cursosSeleccionados(JTable tabla){
        cursosSelect = new Vector();
        DefaultTableModel dtm = (DefaultTableModel) tabla.getModel();
        try{
            jComboBoxPCMArea.removeAllItems();
            jComboBoxPCMArea.addItem("");
            
            if(0 == JOptionPane.showConfirmDialog(null, "Â¿Esta seguro de guardar los cursos? Por ahora no podra hacer cambios")){
                
                JOptionPane.showMessageDialog(null, "Guardando en la base de datos!");
                
                for (int i = 0; i < listadoCursos.size(); i++){
                    if(dtm.getValueAt(i, 2).equals(true)){
                        cursosSelect.add(listadoCursos.get(i));
                    }
                }

                for (int i = 0; i < cursosSelect.size(); i++) {
                    jComboBoxPCMArea.addItem(cursosSelect.get(i).getNombre());
    //                controlCohorte.eliminaCursoCohorte(cohorte, cursosSelect.get(i).getIdCurso());
                    controlCohorte.ingresarCursosCohorte(cohorte, cursosSelect.get(i).getIdCurso());
                }
                
                jButtonSiguienteEnPCurso.setEnabled(true);
                jButtonGuardarCursoSeleccionado.setEnabled(false);
            }
        }catch(NullPointerException npe){
            System.out.println("NullPointerException cursosSeleccionados");
        }
        System.out.println("conexion = " + Conexion.cantidadConexiones);
    }// fin del metodo cursosSeleccionados
    
    /**
     * muestra la lista de los leader teacher que estan habilitados en la bd
     */
    private void listarALTs(){
        String area = cursosSelect.get(jComboBoxPCMArea.getSelectedIndex() - 1).getIdCurso();
        String dep = jComboBoxPCMZona.getSelectedItem().toString();
        jLabelNombreArea.setText(cursosSelect.get(jComboBoxPCMArea.getSelectedIndex() - 1).getNombre());
        listaAspirantes = new Vector<>();
        listaAspirantes = controlCohorte.listarAspirantes(area, dep);
        
        ControladorTablas ct = new ControladorTablas(listaAspirantes);
        
        DefaultTableModel modelo = new DefaultTableModel(ct.contruirCuerpo(2), ct.titulos(2));
        jTableAspiratesBD.setModel(modelo);
        
        jTableAspiratesBD.getColumnModel().getColumn(4).setCellEditor(jTableAspiratesBD.getDefaultEditor(Boolean.class));
        jTableAspiratesBD.getColumnModel().getColumn(4).setCellRenderer(jTableAspiratesBD.getDefaultRenderer(Boolean.class));
        jTableAspiratesBD.getTableHeader().setReorderingAllowed(false);
        
        for(int i = 0; i < listaAspirantes.size(); i++){
            //                             fila columna
            jTableAspiratesBD.isCellEditable(i, 0);
            jTableAspiratesBD.isCellEditable(i, 1);
            jTableAspiratesBD.isCellEditable(i, 2);
            jTableAspiratesBD.isCellEditable(i, 3);
        }
    }// fin del metodo listarALTs
    
    /**
     * lista los cursos habilitados en la bd
     */
    private void listarCursos(){
        listadoCursos = new Vector<>();
        listadoCursos = (Vector<Curso>) controlCohorte.buscarCursos();
        DefaultTableModel dtm = (DefaultTableModel) jTableCursos.getModel();
        
        for (int i = 0; i < listadoCursos.size(); i++)
            dtm.addRow(new Object[] {listadoCursos.get(i).getIdCurso(), listadoCursos.get(i).getNombre() , false});
        
        jButtonGuardarCursoSeleccionado.setEnabled(true);
        jButtonListarCursos.setEnabled(false);
    }// fin del metodo listarCursos
    
    /**
     * 
     */
    private void limpiarPanelCohorte(){
        jDateChooserFechaInicio.setDate(null);
        jDateChooserFechaFin.setDate(null);
        jLabelCodCohorte.setText("AUN NO HA GUARDADO");
        jButtonGuardarCohorte.setEnabled(true);
        jButtonSiguienteCohorte.setEnabled(false);
    }
    
    /**
     * 
     */
    private void limpiarPanelCursos(){
        jLabelFechaInicio.setText("");
        jLabelFechaFin.setText("");
        jLabelPACCodCohorte.setText("");
        jButtonListarCursos.setEnabled(true);
        jButtonGuardarCursoSeleccionado.setEnabled(false);
        jButtonSiguienteEnPCurso.setEnabled(false);
        limpiarTablas(jTableCursos);
    }
    
    /**
     * 
     */
    private void limpiarPanelMatricula(){
        jComboBoxPCMArea.removeAllItems();
        limpiarTablas(jTableLeaderTeacher);
        jButtonGuardarMatricula.setEnabled(true);
        jButtonFinalizarMatricula.setEnabled(false);
    }
    
    /**
     * 
     */
    private void limpiarPanelAspirante(){
        jLabelNombreArea.setText("");
        limpiarTablas(jTableAspiratesBD);
    }
    
     /**
     * 
     */
    private void limpiarPanel(){
        limpiarPanelCohorte();
        
        limpiarPanelCursos();
        limpiarPanelMatricula();
        limpiarPanelAspirante();
    }
    
    private void limpiarTablas(JTable tabla){
        DefaultTableModel borrar = (DefaultTableModel) tabla.getModel();
        System.out.println("llego ");
        for (int i = 0; i < borrar.getRowCount(); i++){
            borrar.removeRow(i);
            System.out.println("lo hizo");
        }
    }
    
    private class EventosPanelLogin implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == jButtonGuardarCohorte){
                 crearCohorte();
            }
            else if (e.getSource() == jButtonSiguienteCohorte){
                actualizarPanelPrincipal(jPanelAgregarCursos);
            }
            else if (e.getSource() == jButtonGuardarCursoSeleccionado){
                cursosSeleccionados(jTableCursos);
            }
            else if (e.getSource() == jButtonSiguienteEnPCurso){
                actualizarPanelPrincipal(jPanelCrearMatricula);
            }
            else if (e.getSource() == jButtonBuscarAspirantes){
                crearJDialog();
            }
            else if (e.getSource() == jButtonListarCursos){
                listarCursos();
            }
            else if (e.getSource() == jButtonSeleccionarAspirante){
                aspirantesSeleccionados();
            }
            else if (e.getSource() == jButtonFinalizarMatricula){
                limpiarPanel();
                actualizarPanelPrincipal(jPanelCrearCohorte);
            }
            else if (e.getSource() == jButtonGuardarMatricula){
                crearMatricula();
            }
        }
    
    } // Fin de la clase EventosPanelLogin

} // Fin de la clase PanelLogin
